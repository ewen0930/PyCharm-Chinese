f###=\u901a\u7528\u8bcd###
GNAME.function=\u529f\u80fd
GNAME.class=\u7c7b
GNAME.var=\u53d8\u91cf
GNAME.item=\u9879\u76ee

# Actions and associated commands
ACT.CMD.use.import=\u4f7f\u7528\u5bfc\u5165\u7684\u6a21\u5757
ACT.qualify.with.module=\u4f7f\u7528\u5bfc\u5165\u7684\u6a21\u5757\u8fdb\u884c\u8ba4\u8bc1
ACT.from.some.module.import=\u8fdb\u53e3\u4e8e ...

### Quick fixes ###
QFIX.auto.import.family=\u8fdb\u53e3
QFIX.auto.import.import.this.name=\u5bfc\u5165\u8fd9\u4e2a\u540d\u5b57
QFIX.auto.import.import.name=\u5bfc\u5165\u201c{0}\u201d

QFIX.local.auto.import.family=\u672c\u5730\u5bfc\u5165
QFIX.local.auto.import.import.locally={0}\u5728\u672c\u5730

QFIX.add.import.add.import=\u6dfb\u52a0\u201c\u201d\u201c{0}\u201d\u201c\u201d

QFIX.add.parameter.self=\u6dfb\u52a0\u53c2\u6570\u201c{0}\u201d
QFIX.add.super=\u6dfb\u52a0\u8d85\u7c7b\u547c\u53eb

QFIX.add.property=\u4e3a\u8be5\u5b57\u6bb5\u6dfb\u52a0\u5c5e\u6027
QFIX.use.property=\u4f7f\u7528\u5c5e\u6027\u7684\u5b57\u6bb5

QFIX.make.public=\u516c\u4e4b\u4e8e\u4f17

QFIX.convert.to.new.style=\u8f6c\u6362\u4e3a\u65b0\u98ce\u683c\u7684\u7c7b

QFIX.change.base.class=\u66f4\u6539\u57fa\u7c7b

QFIX.create.property=\u521b\u5efa\u5c5e\u6027

QFIX.add.encoding=\u6dfb\u52a0\u7f16\u7801\u58f0\u660e

QFIX.NAME.parameters=\u51fd\u6570\u548c\u65b9\u6cd5\u7684\u53c2\u6570
QFIX.rename.parameter.to.$0=\u91cd\u547d\u540d\u4e3a\u201c{0}\u201d

QFIX.NAME.add.field.$0.to.class.$1=\u5c06\u5b57\u6bb5\u201c{0}\u201d\u6dfb\u52a0\u5230\u7c7b{1}
QFIX.added.constructor.$0.for.field.$1=\u5728\u7c7b<code> {0} </code>\u4e2d\u6dfb\u52a0\u4e86__init__\uff0c\u4ee5\u9002\u5e94\u65b0\u7684\u5b57\u6bb5<code> {1} </code>
QFIX.failed.to.add.field=<br/> <br/>\u65e0\u6cd5\u6dfb\u52a0\u5b57\u6bb5\uff01<br/> <br/>

QFIX.NAME.add.method.$0.to.class.$1=\u5c06\u65b9\u6cd5{0}()\u6dfb\u52a0\u5230\u7c7b{1}
QFIX.failed.to.add.method=<br/> <br/>\u6dfb\u52a0\u65b9\u6cd5\u5931\u8d25\uff01<br/> <br/>

QFIX.NAME.add.function.$0.to.module.$1=\u5728\u6a21\u5757{1}\u4e2d\u521b\u5efa\u51fd\u6570{0}()
QFIX.failed.to.add.function=<br/> <br/>\u65e0\u6cd5\u6dfb\u52a0\u529f\u80fd\uff01<br/> <br/>

QFIX.action.failed=\u884c\u52a8\u5931\u8d25

QFIX.remove.trailing.semicolon=\u5220\u9664\u5c3e\u968f\u5206\u53f7

QFIX.dict.creation=\u66ff\u6362\u5b57\u5178\u521b\u5efa
QFIX.list.creation=\u66ff\u6362\u5217\u8868\u521b\u5efa

QFIX.classic.class.transform=\u7ee7\u627f\u5bf9\u8c61

QFIX.add.global=\u6dfb\u52a0\u5168\u5c40\u8bed\u53e5

QFIX.simplify.$0=\u5c06\u5e03\u5c14\u8868\u8fbe\u5f0f\u66ff\u6362\u4e3a\u201c{0}\u201d

QFIX.move.from.future.import=\u5c06\u201c__future__ import\u201d\u79fb\u52a8\u5230\u6b63\u786e\u7684\u4f4d\u7f6e

QFIX.replace.equality=\u66ff\u6362\u5e73\u7b49

QFIX.redundant.parentheses=\u5220\u9664\u591a\u4f59\u7684\u62ec\u53f7

QFIX.augment.assignment=\u7528\u8d4b\u503c\u8d4b\u503c\u66ff\u6362\u8d4b\u503c

QFIX.chained.comparison=\u7b80\u5316\u94fe\u5f0f\u6bd4\u8f83

QFIX.statement.effect=\u7528\u51fd\u6570\u8c03\u7528\u66ff\u6362
QFIX.statement.effect.move.docstring=\u5c06\u6587\u6863\u5b57\u7b26\u4e32\u79fb\u5230\u9002\u5f53\u7684\u4f4d\u7f6e

QFIX.statement.effect.introduce.variable=\u5f15\u5165\u53d8\u91cf

QFIX.unresolved.reference=\u5c06\u201c{0}\u201d\u66ff\u6362\u4e3a\u201c{1}\u3002{0}\u201d

QFIX.unresolved.reference.add.param.$0=\u521b\u5efa\u53c2\u6570\u201c{0}\u201d
QFIX.unresolved.reference.add.param=\u521b\u5efa\u53c2\u6570\u4f9b\u53c2\u8003

# UnresolvedRefCreateFunctionQuickFix
QFIX.unresolved.reference.create.function=\u521b\u5efa\u529f\u80fd
QFIX.NAME.unresolved.reference.create.function=\u521b\u5efa\u51fd\u6570\u201c{0}\u201d

QFIX.introduce.variable=\u4e3a\u8bed\u53e5\u5f15\u5165\u53d8\u91cf

# RemoveUnnecessaryBackslashQuickFix
QFIX.remove.unnecessary.backslash=\u5220\u9664\u8868\u8fbe\u5f0f\u4e2d\u4e0d\u5fc5\u8981\u7684\u53cd\u659c\u6760

# ConvertDocstringQuickFix
QFIX.convert.single.quoted.docstring=\u5c06docstring\u8f6c\u6362\u4e3a\u4e09\u91cd\u53cc\u5f15\u53f7\u5b57\u7b26\u4e32\u5f62\u5f0f

#UnresolvedRefTrueFalseQuickFix
QFIX.unresolved.reference.replace.$0=\u66ff\u6362\u4e3a{0}

#PyDefaultArgumentQuickFix
QFIX.default.argument=\u66ff\u6362\u53ef\u53d8\u7684\u9ed8\u8ba4\u53c2\u6570

#RemoveArgumentEqualDefaultQuickFix
QFIX.remove.argument.equal.default=\u5220\u9664\u53c2\u6570\u7b49\u4e8e\u9ed8\u8ba4

# ReplaceFunctionWithSetLiteralQuickFix
QFIX.replace.function.set.with.literal=\u7528set literal\u66ff\u6362\u51fd\u6570\u8c03\u7528

#DocstringQuickFix
QFIX.docstring.add.$0=\u6dfb\u52a0\u6587\u6863\u5b57\u7b26\u4e32\u53c2\u6570\u201c{0}\u201d
QFIX.docstring.remove.$0=\u5220\u9664docstring\u53c2\u6570\u201c{0}\u201d
QFIX.docstring.insert.stub=\u63d2\u5165\u6587\u6863\u5b57\u7b26\u4e32

#RemoveDecoratorQuickFix
QFIX.remove.decorator=\u5220\u9664\u88c5\u9970\u8005

#PyRenameUnresolvedRefQuickFix
QFIX.rename.unresolved.reference=\u91cd\u547d\u540d\u53c2\u8003

#PyMoveAttributeToInitQuickFix
QFIX.move.attribute=\u5c06\u5c5e\u6027\u79fb\u52a8\u5230__init__\u65b9\u6cd5

#PyMakeMethodStaticQuickFix
QFIX.NAME.make.static=\u4f7f\u65b9\u6cd5\u9759\u6001

#PyMakeFunctionFromMethodQuickFix
QFIX.NAME.make.function=\u4ece\u65b9\u6cd5\u505a\u529f\u80fd

#PyMakeFunctionReturnTypeQuickFix
QFIX.NAME.make.$0.return.$1=\u4f7f\u201c{0}\u201d\u8fd4\u56de\u201c{1}\u201d

#PyImplementMethodsQuickFix
QFIX.NAME.implement.methods=\u5b9e\u73b0\u62bd\u8c61\u65b9\u6cd5

QFIX.NAME.remove.assignment=\u5220\u9664\u4f5c\u4e1a

QFIX.NAME.remove.statement=\u5220\u9664\u8bed\u53e5

QFIX.NAME.update.parameters=\u66f4\u65b0\u53c2\u6570

QFIX.NAME.remove.call=\u5220\u9664\u7535\u8bdd

QFIX.NAME.move.except.up=\u9664\u4e86\u5b50\u53e5\u4ee5\u5916

QFIX.NAME.remove.dict.key=\u5220\u9664\u8fd9\u4e2a\u952e

QFIX.NAME.add.specifier=\u6dfb\u52a0\u683c\u5f0f\u8bf4\u660e\u7b26\u5b57\u7b26

QFIX.NAME.add.exception.base=\u6dfb\u52a0\u5f02\u5e38\u57fa\u7c7b

QFIX.NAME.change.signature=\u66f4\u6539\u7b7e\u540d
QFIX.change.signature.of=\u66f4\u6539{0}\u7684\u7b7e\u540d

QFIX.NAME.remove.argument=\u5220\u9664\u53c2\u6570

QFIX.NAME.remove.parameter=\u5220\u9664\u53c2\u6570

QFIX.NAME.rename.argument=\u91cd\u547d\u540d\u53c2\u6570
QFIX.NAME.rename.element=\u91cd\u547d\u540d\u5143\u7d20

QFIX.NAME.wrap.in.exception=\u7528\u5f02\u5e38\u8c03\u7528\u5305\u88c5

QFIX.NAME.make.list=\u7528\u5217\u8868\u66ff\u6362\u5143\u7ec4

#PyRemoveUnderscoresInNumericLiteralsQuickFix
QFIX.NAME.remove.underscores.in.numeric=\u5220\u9664\u6570\u5b57\u6587\u5b57\u4e2d\u7684\u4e0b\u5212\u7ebf

# InstallAndImportQuickFix
QFIX.install.and.import.package=\u5b89\u88c5\u548c\u5bfc\u5165\u5305
QFIX.NAME.install.and.import.package=\u5b89\u88c5\u5e76\u5bfc\u5165\u5305\u201c{0}\u201d

# Intentions: INTN
INTN.Family.convert.import.unqualify=\u5c06\u201c\u5bfc\u5165\u6a21\u5757\u201d\u8f6c\u6362\u4e3a\u201c\u4ece\u6a21\u5757\u5bfc\u5165\u201d
INTN.Family.convert.import.qualify=\u5c06\u201c\u4ece\u6a21\u5757\u5bfc\u5165\u201d\u8f6c\u6362\u4e3a\u201c\u5bfc\u5165\u6a21\u5757\u201d
INTN.Family.toggle.import.alias=\u5207\u6362\u5bfc\u5165\u522b\u540d
INTN.Family.convert.except.part=\u5c06\u90e8\u5206\u8f6c\u6362\u4e3a\u652f\u6301\u7684\u5f62\u5f0f
INTN.Family.convert.set.literal=\u8f6c\u6362\u8bbe\u7f6e\u6587\u5b57\u4e24\u4e2a\u652f\u6301\u7684\u5f62\u5f0f
INTN.Family.convert.builtin=\u8f6c\u6362\u5185\u7f6e\u6a21\u5757\u5bfc\u5165
INTN.Family.convert.dict.comp.expression=\u8f6c\u6362\u8bcd\u5178\u7406\u89e3\u8868\u8fbe
INTN.Family.convert.string=\u5c06\u5355\u5f15\u53f7\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53cc\u5f15\u53f7

INTN.convert.to.from.$0.import.$1=\u8f6c\u6362\u4e3a\u201cfrom {0} import {1}\u201d
INTN.convert.to.import.$0=\u8f6c\u6362\u4e3a\u201cimport {0}\u201d

INTN.alias.for.$0.dialog.title=\u522b\u540d\u201c{0}\u201d:
INTN.add.alias.for.import.$0=\u5c06\u522b\u540d\u6dfb\u52a0\u5230\u201c{0}\u201d
INTN.remove.alias.for.import.$0=\u5220\u9664\u522b\u540d\u201c{0}\u201d

INTN.Family.migration.to.python3=\u8fc1\u79fb\u5230Python 3

INTN.convert.except.to=\u5c06'exceptClass\uff0cTarget'\u9664\u5916\u8f6c\u6362\u4e3a'exceptClass as Target'

INTN.convert.set.literal.to=\u5c06\u8bbe\u7f6e\u6587\u5b57\u8f6c\u6362\u4e3a\u201c\u8bbe\u7f6e\u201d\u65b9\u6cd5\u8c03\u7528

INTN.convert.builtin.import=\u5c06\u5185\u7f6e\u6a21\u5757\u5bfc\u5165\u8f6c\u6362\u4e3a\u652f\u6301\u7684\u5f62\u5f0f

INTN.convert.dict.comp.to=\u5c06\u5b57\u5178\u7406\u89e3\u8f6c\u6362\u4e3a\u201c\u5b57\u5178\u201d\u65b9\u6cd5\u8c03\u7528

INTN.replace.noteq.operator=\u66f4\u6362\u4e0d\u76f8\u7b49\u7684\u64cd\u4f5c\u5458

INTN.remove.leading.$0=\u5220\u9664\u524d\u5bfc{0}
INTN.remove.leading.prefix=\u5220\u9664\u524d\u7f00

INTN.remove.trailing.l=\u5220\u9664\u540e\u9762\u7684L

INTN.replace.list.comprehensions=\u5c06\u5217\u8868\u63a8\u5bfc\u8f6c\u6362\u4e3a\u652f\u6301\u7684\u5f62\u5f0f

INTN.replace.list.comprehensions.with.for=\u5c06\u5217\u8868\u63a8\u5bfc\u8f6c\u6362\u4e3afor\u5faa\u73af

INTN.replace.octal.numeric.literal=\u5c06\u516b\u8fdb\u5236\u6570\u5b57\u6587\u5b57\u8f6c\u6362\u4e3a\u652f\u6301\u7684\u5f62\u5f0f

INTN.replace.raise.statement=\u5c06raise\u8bed\u53e5\u8f6c\u6362\u4e3a\u53d7\u652f\u6301\u7684\u8868\u5355

INTN.replace.backquote.expression=\u66ff\u6362\u53cd\u5f15\u53f7\u8868\u8fbe\u5f0f

INTN.replace.method=\u66ff\u6362\u5f53\u524dPython\u7248\u672c\u4e0d\u652f\u6301\u7684\u65b9\u6cd5

INTN.split.if=\u62c6\u5206\u5982\u679c
INTN.split.if.text=\u5982\u679c\u5206\u62102\u4e2a

INTN.negate.comparison=\u5426\u5b9a\u6bd4\u8f83
INTN.negate.$0.to.$1=\u5c06\u201c{0}\u201d\u66ff\u6362\u4e3a\u201c{1}\u201d

INTN.string.concatenation.to.format=\u7528\u683c\u5f0f\u8fd0\u7b97\u7b26\u66ff\u6362\u5b57\u7b26\u4e32\u8fde\u63a5
INTN.replace.plus.with.format.operator=\u7528\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u8fd0\u7b97\u7b26\u66ff\u6362
INTN.replace.plus.with.str.format=\u7528str.format\u65b9\u6cd5\u8c03\u7528\u66ff\u6362

# ConvertFormatOperatorToMethodIntention
INTN.format.operator.to.method=\u5c06\u683c\u5f0f\u8fd0\u7b97\u7b26\u7528\u6cd5\u8f6c\u6362\u4e3astr.format\u65b9\u6cd5\u8c03\u7528

# PyConvertToFStringIntention
INTN.convert.to.fstring.literal=\u8f6c\u6362\u4e3af-string\u6587\u5b57
INTN.replace.with.method=\u7528str.format\u65b9\u6cd5\u8c03\u7528\u66ff\u6362

INTN.flip.comparison=\u7ffb\u8f6c\u6bd4\u8f83
INTN.flip.$0=\u7ffb\u8f6c\u201c{0}\u201d
INTN.flip.$0.to.$1=\u7ffb\u8f6c\u201c{0}\u201d\u5230\u201c{1}\u201d

INTN.convert.string=\u5c06\u5355\u5f15\u53f7\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53cc\u5f15\u53f7

INTN.join.if=\u52a0\u5165\u5982\u679c\u662f
INTN.join.if.text=\u52a0\u5165\u4e24\u4e2a\u5982\u679c\u662f

INTN.convert.dict.constructor.to.dict.literal=\u8f6c\u6362\u5b57\u5178\u6784\u9020\u51fd\u6570\u4e3a\u5b57\u9762\u7684\u5f62\u5f0f
INTN.convert.dict.literal.to.dict.constructor=\u8f6c\u6362\u5b57\u5178\u4e3a\u5b57\u5178\u6784\u9020

INTN.quoted.string=\u5728\u5355\u5f15\u53f7\u548c\u53cc\u5f15\u53f7\u5b57\u7b26\u4e32\u4e4b\u95f4\u8f6c\u6362
INTN.quoted.string.single.to.double=\u5c06\u5355\u5f15\u53f7\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u53cc\u5f15\u53f7\u5b57\u7b26\u4e32
INTN.quoted.string.double.to.single=\u5c06\u53cc\u5f15\u53f7\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5355\u5f15\u53f7\u5b57\u7b26\u4e32

INTN.convert.lambda.to.function=\u5c06lambda\u8f6c\u6362\u4e3a\u51fd\u6570

INTN.convert.variadic.param=\u4ece\u53ef\u53d8\u53c2\u6570\u8f6c\u6362\u4e3a\u5e38\u89c4\u53c2\u6570(s\uff09

# PyConvertTripleQuotedStringIntention
INTN.triple.quoted.string=\u5c06\u4e09\u91cd\u5f15\u53f7\u5b57\u7b26\u4e32\u8f6c\u6362\u4e3a\u5355\u5f15\u53f7\u5b57\u7b26\u4e32

# PyBaseConvertCollectionLiteralIntention
INTN.convert.collection.literal.family=\u5c06\u6536\u85cf\u96c6\u8f6c\u6362\u4e3a{0}
INTN.convert.collection.literal.text=\u5c06{0}\u8f6c\u6362\u4e3a{1}

# PyConvertTypeCommentToVariableAnnotation
INTN.convert.type.comment.to.variable.annotation.family=\u5c06\u7c7b\u578b\u6ce8\u91ca\u8f6c\u6362\u4e3a\u53d8\u91cf\u6ce8\u91ca
INTN.convert.type.comment.to.variable.annotation.text=\u8f6c\u6362\u4e3a\u53d8\u91cf\u6ce8\u91ca


INTN.demorgan.law=\u5fb7\u6469\u6839\u6cd5\u5f8b

# PyTransformConditionalExpressionIntention
INTN.transform.into.if.else.statement=\u5c06\u6761\u4ef6\u8868\u8fbe\u5f0f\u8f6c\u6362\u4e3aif / else\u8bed\u53e5

# PyConvertTripleQuotedStringIntention
INTN.doc.string.stub=\u63d2\u5165\u6587\u6863\u5b57\u7b26\u4e32\u5b58\u6839

#SpecifyTypeInDocstringIntention
INTN.specify.type=\u5728\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u7c7b\u578b\u4ee5\u4f9b\u53c2\u8003
INTN.specify.return.type=\u5728\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b
INTN.add.parameters.to.docstring=\u5c06\u53c2\u6570\u6dfb\u52a0\u5230docstring

#SpecifyTypeInPy3AnnotationsIntention
INTN.specify.type.in.annotation=\u4f7f\u7528\u6ce8\u91ca\u6307\u5b9a\u7c7b\u578b\u4ee5\u4f9b\u53c2\u8003
INTN.specify.return.type.in.annotation=\u4f7f\u7528\u6ce8\u91ca\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b

#PyAnnotateTypesIntention/PyAnnotateVariableTypeIntention
INTN.add.type.hints.for.function.family=Add type hints for function
INTN.add.type.hints.for.function=Add type hints for function ''{0}''
INTN.add.type.hint.for.variable.family=Add type hint for variable
INTN.add.type.hint.for.variable=Add type hint for variable ''{0}''
INTN.add.type.hint.for.variable.PEP484.incompatible.type=Type ''{0}'' cannot be expressed inline in PEP 484 format

#TypeAssertionIntention
INTN.insert.assertion=\u63d2\u5165\u7c7b\u578b\u65ad\u8a00

#PyYieldFromIntention
INTN.yield.from=\u5c06\u201cyield\u201d\u663e\u5f0f\u8fed\u4ee3\u8f6c\u6362\u4e3a\u201cyield from\u201d\u8868\u8fbe\u5f0f

#PyConvertStaticMethodToFunctionIntention
INTN.convert.static.method.to.function=\u5c06\u9759\u6001\u65b9\u6cd5\u8f6c\u6362\u4e3a\u51fd\u6570

#PyConvertMethodToPropertyIntention
INTN.convert.method.to.property=\u5c06\u65b9\u6cd5\u8f6c\u6362\u4e3a\u5c5e\u6027

# Conflict checker
CONFLICT.name.$0.obscured=\u540d\u79f0\u201c{0}\u201d\u88ab\u672c\u5730\u5b9a\u4e49\u906e\u853d
CONFLICT.name.$0.obscured.cannot.convert=\u540d\u79f0\u201c{0}\u201d\u88ab\u906e\u76d6\u3002\u65e0\u6cd5\u8f6c\u6362\u3002
CONFLICT.occurrence.sing=\u53d1\u751f
CONFLICT.occurrence.pl=\u4e8b\u4ef6

### Surround with templates ###
surround.with.whileelse.template=while / else
surround.with.return.template=\u8fd4\u56de
surround.with.try.except.template=\u5c1d\u8bd5/\u9664\u4e86

##########################################################################################################################
# Unwrap
##########################################################################################################################
unwrap.if=\u5982\u679c...\u89e3\u5305...
unwrap.while=\u89e3\u5f00...
unwrap.for=\u6253\u5f00...
unwrap.with=\u6253\u5f00...
unwrap.try=\u6253\u5f00\u8bd5\u8bd5...
unwrap.else=\u6253\u5f00\u522b\u7684...
unwrap.elif=\u89e3\u5305elif...
remove.else=\u5220\u9664\u5176\u4ed6...
remove.elif=\u5220\u9664elif...

### Inspections: INSP ###
INSP.GROUP.python=\u87d2\u86c7
INSP.GROUP.mako=\u771f\u5b50

# PyArgumentListInspection
INSP.NAME.incorrect.call.arguments=\u8c03\u7528\u53c2\u6570\u4e0d\u6b63\u786e
INSP.cannot.appear.past.keyword.arg=\u4e0d\u80fd\u51fa\u73b0\u5728\u5173\u952e\u5b57\u53c2\u6570\u6216* arg\u6216** kwarg\u4e4b\u540e
INSP.unexpected.arg=\u610f\u5916\u7684\u8bf4\u6cd5
INSP.unexpected.arg(s)=\u610f\u5916\u7684\u8bba\u636e
INSP.parameter.$0.unfilled=\u53c2\u6570\u201c{0}\u201d\u672a\u586b\u5145
INSP.parameter(s).unfilled=\u53c2\u6570\u672a\u586b\u5145
INSP.possible.callees=\u53ef\u80fd\u7684\u88ab\u8c03\u7528\u8005
INSP.func.$0.lacks.first.arg=\u51fd\u6570\u201c{0}\u201d\u7f3a\u5c11\u4f4d\u7f6e\u53c2\u6570
INSP.expected.dict.got.$0=\u9884\u671f\u5b57\u5178\uff0c\u5f97\u5230{0}
INSP.expected.iter.got.$0=\u9884\u671f\u4e00\u4e2a\u8fed\u4ee3\uff0c\u5f97\u5230{0}
INSP.more.args.that.pos.params=\u591a\u4e2a\u503c\u89e3\u6790\u4e3a\u4e00\u4e2a\u4f4d\u7f6e\u53c2\u6570
INSP.multiple.values.resolve.to.positional.$0=\u591a\u4e2a\u503c\u89e3\u6790\u4e3a\u4f4d\u7f6e\u53c2\u6570\u201c{0}\u201d
INSP.cannot.analyze=\u8fd9\u4e2a\u53c2\u6570\u5217\u8868\u4e0d\u80fd\u88ab\u5206\u6790

# PyMethodParametersInspection
INSP.NAME.problematic.first.parameter=\u7b2c\u4e00\u4e2a\u53c2\u6570\u6709\u9ebb\u70e6\u7684\u65b9\u6cd5
INSP.must.have.first.parameter=\u65b9\u6cd5\u5fc5\u987b\u5177\u6709\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u901a\u5e38\u79f0\u4e3a\u201c{0}\u201d
INSP.probably.mistyped.self=\u4f60\u4e0d\u662f\u6307\u201c\u81ea\u6211\u201d\u5417\uff1f
INSP.usually.named.self=\u901a\u5e38\u4e00\u4e2a\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u88ab\u547d\u540d\u4e3a\u201cself\u201d
INSP.usually.named.$0=\u901a\u5e38\u8fd9\u79cd\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u88ab\u547d\u540d\u4e3a\u201c{0}\u201d
INSP.first.param.must.not.be.tuple=\u975e\u9759\u6001\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u4e0d\u80fd\u662f\u5143\u7ec4

# PyNestedDecoratorsInspection
INSP.NAME.nested.decorators=\u4fee\u9970\u5668\u6709\u95ee\u9898\u7684\u5d4c\u5957
INSP.decorator.receives.unexpected.builtin=\u8fd9\u4e2a\u88c5\u9970\u5668\u4e0d\u4f1a\u6536\u5230\u5b83\u53ef\u80fd\u671f\u671b\u7684\u53ef\u8c03\u7528\u7684;\u5185\u7f6e\u7684\u88c5\u9970\u5668\u8fd4\u56de\u4e00\u4e2a\u7279\u6b8a\u7684\u5bf9\u8c61

# PyRedeclarationInspection
INSP.NAME.redeclaration=\u91cd\u65b0\u7533\u62a5\u7684\u540d\u79f0\u6ca1\u6709\u4f7f\u7528
INSP.redeclared.name=\u4e0a\u9762\u5b9a\u4e49\u7684\u201c{0}\u201d\u6ca1\u6709\u4f7f\u7528

# PyUnresolvedReferencesInspection
INSP.NAME.unresolved.refs=\u672a\u89e3\u51b3\u7684\u53c2\u8003
INSP.module.$0.not.found=\u672a\u627e\u5230\u6a21\u5757\u201c{0}\u201d
INSP.unresolved.ref.$0=\u672a\u89e3\u51b3\u7684\u53c2\u8003\u201c{0}\u201d
INSP.unresolved.ref.$0.for.class.$1=\u7c7b\u201c{1}\u201d\u7684\u672a\u89e3\u6790\u5c5e\u6027\u5f15\u7528\u201c{0}\u201d
INSP.cannot.find.$0.in.$1=\u5728\u201c{1}\u201d\u4e2d\u627e\u4e0d\u5230\u5f15\u7528\u201c{0}\u201d
INSP.try.except.import.error=\u201c\u9664\u4e86ImportError\u5916\u201d\u7684try\u5757\u4e2d\u7684 ''{0}'' \u4e5f\u5e94\u5728except\u5757\u4e2d\u5b9a\u4e49
INSP.unresolved.operator.ref=\u7c7b\u201c{0}\u201d\u6ca1\u6709\u5b9a\u4e49\u201c{1}\u201d\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u5176\u5b9e\u4f8b\u4e0a\u4f7f\u7528\u201c{2}\u201d\u8fd0\u7b97\u7b26

# PyInterpreterInspection
INSP.NAME.invalid.interpreter=\u914d\u7f6e\u7684\u89e3\u91ca\u5668\u65e0\u6548

# ReturnValueFromInitInspection
INSP.NAME.init.return=__init__\u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u503c
INSP.cant.return.value.from.init=\u65e0\u6cd5\u4ece__init__\u8fd4\u56de\u503c

# PyUnreachableCodeInspection
INSP.NAME.unreachable.code=\u65e0\u6cd5\u8bbf\u95ee\u7684\u4ee3\u7801
INSP.unreachable.code=\u6b64\u4ee3\u7801\u65e0\u6cd5\u8bbf\u95ee

# PyMethodFirstArgAssignmentInspection
INSP.NAME.first.arg.assign=\u91cd\u65b0\u5206\u914d\u65b9\u6cd5\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570
INSP.first.arg.$0.assigned=\u65b9\u6cd5\u7684\u53c2\u6570\u201c{0}\u201d\u91cd\u65b0\u5206\u914d

# PyStringFormatInspection
INSP.NAME.str.format=\u5b57\u7b26\u4e32\u683c\u5f0f\u5316\u64cd\u4f5c\u4e2d\u7684\u9519\u8bef
INSP.format.requires.no.mapping=\u683c\u5f0f\u4e0d\u9700\u8981\u6620\u5c04
INSP.key.$0.has.no.arg=\u952e\u201c{0}\u201d\u6ca1\u6709\u76f8\u5e94\u7684\u53c2\u6570
INSP.unexpected.type.$0=\u610f\u5916\u7684\u7c7b\u578b{0}
INSP.too.few.keys=\u6620\u5c04\u5bc6\u94a5\u592a\u5c11
INSP.no.format.specifier.char=\u683c\u5f0f\u8bf4\u660e\u7b26\u5b57\u7b26\u4e22\u5931
INSP.format.requires.mapping=\u683c\u5f0f\u9700\u8981\u6620\u5c04
INSP.too.many.args.for.fmt.string=\u683c\u5f0f\u5b57\u7b26\u4e32\u7684\u53c2\u6570\u592a\u591a
INSP.too.few.args.for.fmt.string=\u683c\u5f0f\u5b57\u7b26\u4e32\u7684\u53c2\u6570\u592a\u5c11
INSP.incompatible.options=\u5757\u201c{0}\u201d\u4e2d\u7684\u683c\u5f0f\u9009\u9879\u4e0d\u517c\u5bb9
INSP.unused.mapping = \u6620\u5c04\u952e\u201c{0}\u201d\u672a\u4f7f\u7528
INSP.unsupported.format.character=\u4e0d\u652f\u6301\u7684\u683c\u5f0f\u5b57\u7b26\u201c{0}\u201d
INSP.manual.to.auto.field.numbering=Cannot switch from manual field specification to automatic field numbering
INSP.auto.to.manual.field.numbering=Cannot switch from automatic field numbering to manual field specification

# PyMethodOverridingInspection
INSP.NAME.method.over=\u65b9\u6cd5\u7b7e\u540d\u4e0e\u91cd\u5199\u65b9\u6cd5\u7684\u7b7e\u540d\u4e0d\u5339\u914d
INSP.signature.mismatch=\u65b9\u6cd5\u201c{0}\u201d\u7684\u7b7e\u540d\u4e0e\u7c7b\u201c{1}\u201d\u4e2d\u57fa\u65b9\u6cd5\u7684\u7b7e\u540d\u4e0d\u5339\u914d

# PyInitNewSignatureInspection
INSP.NAME.new.init.signature=__new__\u548c__init__\u7684\u4e0d\u517c\u5bb9\u7b7e\u540d
INSP.new.incompatible.to.init=\u7b7e\u540d\u4e0e__init__\u4e0d\u517c\u5bb9
INSP.init.incompatible.to.new=\u7b7e\u540d\u4e0e__new__\u4e0d\u517c\u5bb9

# PyTrailingSemicolonInspection
INSP.NAME.trailing.semicolon=\u5728\u8bed\u53e5\u4e2d\u62d6\u5c3e\u5206\u53f7

# PyUnusedLocalInspection
INSP.NAME.unused=\u672a\u4f7f\u7528\u7684\u672c\u5730
INSP.unused.locals.parameter.isnot.used=\u4e0d\u4f7f\u7528\u53c2\u6570\u201c{0}\u201d\u7684\u503c
INSP.unused.locals.local.variable.isnot.used=\u5c40\u90e8\u53d8\u91cf\u201c{0}\u201d\u7684\u503c\u4e0d\u88ab\u4f7f\u7528
INSP.unused.locals.replace.with.wildcard=\u7528_\u6765\u4ee3\u66ff
INSP.unused.locals.local.function.isnot.used=\u672c\u5730\u51fd\u6570\u201c{0}\u201d\u4e0d\u88ab\u4f7f\u7528
INSP.unused.locals.local.class.isnot.used=\u6ca1\u6709\u4f7f\u7528\u672c\u5730\u7c7b\u201c{0}\u201d

# PyUnboundLocalVariableInspection
INSP.NAME.unbound=\u672a\u7ed1\u5b9a\u7684\u5c40\u90e8\u53d8\u91cf
INSP.unbound.local.variable=\u5c40\u90e8\u53d8\u91cf\u201c{0}\u201d\u53ef\u80fd\u5728\u8d4b\u503c\u4e4b\u524d\u88ab\u5f15\u7528
INSP.unbound.nonlocal.variable=\u975e\u5c40\u90e8\u53d8\u91cf\u201c{0}\u201d\u5fc5\u987b\u7ed1\u5b9a\u5728\u5916\u90e8\u51fd\u6570\u8303\u56f4\u5185
INSP.unbound.name.not.defined=\u540d\u79f0\u201c{0}\u201d\u53ef\u4ee5\u4e0d\u5b9a\u4e49
INSP.unbound.function.too.large=\u51fd\u6570\u201c{0}\u201d\u592a\u5927\u800c\u65e0\u6cd5\u5206\u6790

# PyDictCreationInspection
INSP.NAME.dict.creation=\u5b57\u5178\u521b\u5efa\u53ef\u4ee5\u901a\u8fc7\u5b57\u5178\u6587\u5b57\u91cd\u5199

# PyListCreationInspection
INSP.NAME.list.creation=\u5217\u8868\u521b\u5efa\u53ef\u4ee5\u901a\u8fc7\u5217\u8868\u6587\u5b57\u91cd\u5199

# PyExceptClausesOrderInspection
INSP.NAME.bad.except.clauses.order=\u9664\u4e86\u5b50\u53e5\u987a\u5e8f\u4ee5\u5916
INSP.class.$0.already.caught=\u5f02\u5e38\u7c7b\u201c{0}\u201d\u5df2\u88ab\u6355\u83b7
INSP.class.$0.superclass.$1.already.caught=''{0}''\uff0c\u5f02\u5e38\u7c7b ''{1}'' \u7684\u8d85\u7c7b\u5df2\u7ecf\u88ab\u6355\u83b7

# PyTupleAssignmentBalanceInspection
INSP.NAME.incorrect.assignment=\u5143\u7ec4\u5206\u914d\u5e73\u8861\u4e0d\u6b63\u786e

# PyClassicStyleClassInspection
INSP.NAME.classic.class.usage=\u7ecf\u5178\u98ce\u683c\u7c7b\u7684\u7528\u6cd5
INSP.classic.class.usage.old.style.class=\u8001\u5f0f\u8bfe\u5802
INSP.classic.class.usage.old.style.class.ancestors=\u65e7\u5f0f\u7684\u8bfe\u7a0b\uff0c\u56e0\u4e3a\u5b83\u6240\u7ee7\u627f\u7684\u6240\u6709\u8bfe\u7a0b\u90fd\u662f\u65e7\u5f0f\u8bfe\u7a0b


# PyExceptionInheritance
INSP.NAME.exception.not.inherit=\u5f02\u5e38\u4e0d\u4f1a\u4ece\u6807\u51c6\u7684\u201cException\u201d\u7c7b\u7ee7\u627f

# PyDefaultArgumentInspection
INSP.NAME.default.argument=\u9ed8\u8ba4\u53c2\u6570\u662f\u53ef\u53d8\u7684

# PyIncorrectDocstringInspection
INSP.NAME.incorrect.docstring=\u4e0d\u6b63\u786e\u7684\u6587\u6863\u5b57\u7b26\u4e32
INSP.missing.parameter.in.docstring=\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u7f3a\u5c11\u53c2\u6570{0}
INSP.unexpected.parameter.in.docstring=\u6587\u6863\u5b57\u7b26\u4e32\u4e2d\u7684\u610f\u5916\u53c2\u6570{0}

# PyMissingOrEmptyDocstringInspection
INSP.NAME.missing.or.empty.docstring=\u7f3a\u5c11\u6216\u7a7a\u6587\u6863\u5b57\u7b26\u4e32
INSP.no.docstring=\u7f3a\u5c11\u6587\u6863\u5b57\u7b26\u4e32
INSP.empty.docstring=\u7a7a\u7684\u6587\u6863\u5b57\u7b26\u4e32

# PyDocstringTypesInspection
INSP.NAME.docstring.types=\u8f93\u5165\u6587\u6863\u5b57\u7b26\u4e32\u4e0e\u63a8\u65ad\u7684\u7c7b\u578b\u4e0d\u5339\u914d

# PyStatementEffectInspection
INSP.NAME.statement.effect=\u58f0\u660e\u4e0d\u8d77\u4f5c\u7528
INSP.NAME.statement.message=\u58f0\u660e\u4f3c\u4e4e\u6ca1\u6709\u6548\u679c

# PySimplifyBooleanCheckInspection
INSP.NAME.check.can.be.simplified=\u5e03\u5c14\u53d8\u91cf\u68c0\u67e5\u53ef\u4ee5\u7b80\u5316
INSP.expression.can.be.simplified=\u8868\u8fbe\u53ef\u4ee5\u7b80\u5316

# PyFromFutureImportInspection
INSP.NAME.from.future.import=\u4ece__future__\u5bfc\u5165\u5fc5\u987b\u662f\u7b2c\u4e00\u4e2a\u53ef\u6267\u884c\u8bed\u53e5

# PyComparisonWithNoneInspection
INSP.NAME.comparison.with.none=\u6ca1\u6709\u4e0e\u5e73\u7b49\u8fd0\u8425\u5546\u8fdb\u884c\u6bd4\u8f83

# PyStringExceptionInspection
INSP.NAME.raising.string.exception=\u5f15\u53d1\u5b57\u7b26\u4e32\u5f02\u5e38

# PySuperArgumentsInspection
INSP.NAME.wrong.super.arguments=\u9519\u8bef\u7684\u53c2\u6570\u6765\u8c03\u7528\u8d85\u7ea7
INSP.$0.is.not.superclass.of.$1=''{0}''\u4e0d\u662f''{1}''\u7684\u5b9e\u4f8b\u6216\u5b50\u7c7b

# PyByteLiteralInspection
INSP.NAME.byte.literal=\u5b57\u8282\u6587\u5b57\u5305\u542b\u5927\u4e8e255\u7684\u5b57\u7b26

# PynonAsciiCharInspection
INSP.NAME.non.ascii=\u6587\u4ef6\u5305\u542b\u975eASCII\u5b57\u7b26

# PyMandatoryEncodingInspection
INSP.NAME.mandatory.encoding=\u6ca1\u6709\u4e3a\u6587\u4ef6\u6307\u5b9a\u7f16\u7801

# PyTupleItemAssignmentInspection
INSP.NAME.tuple.item.assignment=\u5143\u7ec4\u9879\u76ee\u5206\u914d
INSP.tuples.never.assign.items=\u5143\u7ec4\u4e0d\u652f\u6301\u9879\u76ee\u5206\u914d

# PyPropertyAccessInspection
INSP.NAME.property.access=\u8bbf\u95ee\u5c5e\u6027
INSP.property.$0.cant.be.set=\u5c5e\u6027\u201c{0}\u201d\u65e0\u6cd5\u8bbe\u7f6e
INSP.property.$0.cant.be.read=\u5c5e\u6027\u201c{0}\u201d\u65e0\u6cd5\u8bfb\u53d6
INSP.property.$0.cant.be.deleted=\u5c5e\u6027\u201c{0}\u201d\u65e0\u6cd5\u5220\u9664

# PyPropertyDefinitionInspection
INSP.NAME.property.definition=\u5c5e\u6027\u5b9a\u4e49
INSP.doc.param.should.be.str=doc\u53c2\u6570\u5e94\u8be5\u662f\u4e00\u4e2a\u5b57\u7b26\u4e32
INSP.strange.arg.want.callable=\u5947\u602a\u7684\u8bf4\u6cd5;\u9884\u8ba1\u53ef\u8c03\u7528
INSP.func.property.name.mismatch=\u51fd\u6570\u548c\u88c5\u9970\u5668\u540d\u79f0\u4e0d\u5339\u914d;\u5c5e\u6027\u8bbf\u95ee\u5668\u4e0d\u88ab\u521b\u5efa
INSP.getter.return.smth=Getter\u5e94\u8be5\u8fd4\u56de\u6216\u4ea7\u751f\u4e00\u4e9b\u4e1c\u897f
INSP.setter.should.not.return=Setter\u4e0d\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u503c
INSP.deleter.should.not.return=Deleter\u4e0d\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a\u503c
INSP.getter.signature.advice=Getter\u7b7e\u540d\u5e94\u8be5\u662f(self\uff09
INSP.setter.signature.advice=\u4e8c\u4f20\u624b\u7b7e\u540d\u5e94\u8be5\u662f(\u81ea\u6211\uff0c\u4ef7\u503c\uff09
INSP.deleter.signature.advice=\u5220\u9664\u8005\u7b7e\u540d\u5e94\u8be5\u662f(self\uff09
INSP.accessor.first.param.is.$0=\u8bbf\u95ee\u8005\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u901a\u5e38\u88ab\u79f0\u4e3a\u201c{0}\u201d

# PyCallByClassInspection
INSP.NAME.different.class.call=\u4f7f\u7528\u4e0d\u540c\u7c7b\u7684\u5b9e\u4f8b\u6309\u7c7b\u8c03\u7528\u65b9\u6cd5
INSP.instance.of.$0.excpected=\u671f\u671b{0}\u7684\u5b9e\u4f8b\uff0c\u800c\u4e0d\u662f\u7c7b\u672c\u8eab
INSP.passing.$0.instead.of.$1=\u4f20\u9012{0}\u800c\u4e0d\u662f{1}\u3002\u8fd9\u662f\u6545\u610f\u7684\u5417\uff1f

# PyBroadExceptionInspection
INSP.NAME.too.broad.exception.clauses=\u8fc7\u4e8e\u5bbd\u6cdb\u7684\u4f8b\u5916\u6761\u6b3e

# PyDictDuplicateKeysInspection
INSP.NAME.duplicate.keys=\u5b57\u5178\u5305\u542b\u91cd\u590d\u7684\u952e

# PyRedundantParenthesesInspection
INSP.NAME.redundant.parentheses=\u5197\u4f59\u7684\u62ec\u53f7

# PyAugmentAssignmentInspection
INSP.NAME.augment.assignment=\u5206\u914d\u53ef\u4ee5\u7528\u6269\u5145\u5206\u914d\u6765\u4ee3\u66ff

# PyChainedComparsonsInspection
INSP.NAME.chained.comparisons=\u94fe\u63a5\u6bd4\u8f83\u53ef\u4ee5\u7b80\u5316

# PyAttributeOutsideInitInspection
INSP.NAME.attribute.outside.init=\u5728__init__\u4e4b\u5916\u5b9a\u4e49\u7684\u5b9e\u4f8b\u5c5e\u6027
INSP.attribute.$0.outside.init=\u5728__init__\u4e4b\u5916\u5b9a\u4e49\u7684\u5b9e\u4f8b\u5c5e\u6027{0}

# PyProtectedMemberInspection
INSP.protected.member.$0.access=\u8bbf\u95ee\u53d7\u4fdd\u62a4\u7684\u6210\u5458{0}\u7684\u7c7b
INSP.protected.member.$0.access.module=\u8bbf\u95ee\u6a21\u5757\u7684\u53d7\u4fdd\u62a4\u6210\u5458{0}

# PyArgumentEqualDefaultInspection
INSP.NAME.argument.equal.default=\u4f20\u9012\u7ed9\u51fd\u6570\u7684\u53c2\u6570\u7b49\u4e8e\u9ed8\u8ba4\u53c2\u6570\u503c
INSP.argument.equals.to.default=\u53c2\u6570\u7b49\u4e8e\u9ed8\u8ba4\u53c2\u6570\u503c

# PyAbstractClassInspection
INSP.NAME.abstract.class=\u7c7b\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7684\u62bd\u8c61\u65b9\u6cd5
INSP.NAME.abstract.class.$0.must.implement=\u7c7b{0}\u5fc5\u987b\u5b9e\u73b0\u6240\u6709\u7684\u62bd\u8c61\u65b9\u6cd5

# PyOldStyleClassesInspection
INSP.NAME.oldstyle.class=\u65e7\u5f0f\u73ed\u7ea7\u5305\u542b\u65b0\u5f0f\u73ed\u7ea7\u7279\u5f81
INSP.oldstyle.class.slots=\u65e7\u5f0f\u7c7b\u5305\u542b__slots__\u5b9a\u4e49
INSP.oldstyle.class.getattribute=\u65e7\u5f0f\u7c7b\u5305\u542b__getattribute__\u5b9a\u4e49
INSP.oldstyle.class.super=\u65e7\u5f0f\u7684\u7c7b\u5305\u542b\u8d85\u7ea7\u65b9\u6cd5\u7684\u8c03\u7528

# PyCompatibilityInspection
INSP.NAME.compatibility=\u4ee3\u7801\u517c\u5bb9\u6027\u68c0\u67e5

# PyUnnecessaryBackslashInspection
INSP.NAME.unnecessary.backslash=\u4e0d\u5fc5\u8981\u7684\u53cd\u659c\u6760

# PySingleQuotedDocstringInspection
INSP.NAME.single.quoted.docstring=\u5355\u5f15\u53f7\u6587\u6863\u5b57\u7b26\u4e32
INSP.message.single.quoted.docstring=\u4e09\u91cd\u53cc\u5f15\u53f7\u7684\u5b57\u7b26\u4e32\u5e94\u8be5\u7528\u4e8edocstrings\u3002

# PyMissingConstructorInspection
INSP.NAME.missing.super.constructor=\u9519\u8fc7\u4e86\u5bf9\u8d85\u7c7b\u7684__init__\u7684\u8c03\u7528
INSP.missing.super.constructor.message=\u8c03\u7528\u8d85\u7c7b\u7684__init__\u662f\u9519\u8fc7\u7684

# PySetFunctionToLiteralInspection
INSP.NAME.set.function.to.literal=\u51fd\u6570\u8c03\u7528\u53ef\u4ee5\u7528set literal\u6765\u66ff\u6362

# PyDecoratorInspection
INSP.NAME.decorator.outside.class=\u7c7b\u5916\u90e8\u65b9\u6cd5\u7684\u7c7b\u7279\u5b9a\u88c5\u9970\u5668

# PyPackageRequirementsInspection
INSP.NAME.requirements=\u5305\u88c5\u8981\u6c42

# PyMethodMayBeStaticInspection
INSP.NAME.method.may.be.static=\u65b9\u6cd5\u53ef\u80fd\u662f\u9759\u6001\u7684
INSP.method.may.be.static=\u65b9\u6cd5<code> #ref </code>\u53ef\u80fd\u662f'static'

# PyClassHasNoInitInspection
INSP.NAME.class.has.no.init=\u7c7b\u6ca1\u6709__init__\u65b9\u6cd5
INSP.class.has.no.init=\u7c7b\u6ca1\u6709__init__\u65b9\u6cd5
INSP.parent.$0.has.no.init=\u7236\u9879\u201c{0}\u201d\u6ca1\u6709__init__\u65b9\u6cd5

#PyNoneFunctionAssignmentInspection
INSP.NAME.none.function.assignment=\u6307\u5b9a\u4e0d\u8fd4\u56de\u4efb\u4f55\u4e1c\u897f\u7684\u51fd\u6570\u8c03\u7528(\u65e0\uff09
INSP.none.function.assignment=\u51fd\u6570\u201c{0}\u201d\u4e0d\u8fd4\u56de\u4efb\u4f55\u5185\u5bb9

#PyGlobalUndefinedInspection
INSP.NAME.global.undefined=\u5168\u5c40\u53d8\u91cf\u5728\u6a21\u5757\u7ea7\u522b\u662f\u672a\u5b9a\u4e49\u7684
INSP.NAME.global.$0.undefined=\u5168\u5c40\u53d8\u91cf\u201c{0}\u201d\u5728\u6a21\u5757\u7ea7\u522b\u662f\u672a\u5b9a\u4e49\u7684

#PyAssignmentToLoopOrWithParameterInspection
INSP.NAME.assignment.to.loop.or.with.parameter.display.name=\u8d4b\u503c\u7ed9'for'\u5faa\u73af\u6216'with'\u8bed\u53e5\u53c2\u6570
INSP.NAME.assignment.to.loop.or.with.parameter.display.message=\u5df2\u5728''\u4e2d\u4e3a''\u5faa\u73af\u6216''\u7528''\u8bed\u53e5\u5728\u4e0a\u9762\u58f0\u660e\u4e86\u53d8\u91cf\u201c{0}\u201d

#PyAsyncCallInspection
INSP.NAME.coroutine.is.not.awaited=Coroutine ''{0}'' is not awaited

# PyTestParametrizedInspection
INSP.NAME.pytest-parametrized=Checks that functions decorated by pytest parametrize have correct arguments

# Refactoring
refactoring.will.not.be.accessible=\u6210\u5458\uff0c\u60a8\u5c1d\u8bd5\u79fb\u52a8\u53d6\u51b3\u4e8e\u201c{0}\u201d\uff0c\u5728\u91cd\u6784\u540e\u5c06\u65e0\u6cd5\u8bbf\u95ee
refactoring.error.file.exists=\u6587\u4ef6\u201c{0}\u201d\u5df2\u7ecf\u5b58\u5728
refactoring.error.directory.exists=\u76ee\u5f55\u201c{0}\u201d\u5df2\u7ecf\u5b58\u5728

# introduce
refactoring.introduce.name.error=\u540d\u5b57\u4e0d\u6b63\u786e
refactoring.introduce.selection.error=\u65e0\u6cd5\u4f7f\u7528\u6240\u9009\u5143\u7d20\u6267\u884c\u91cd\u6784

# introduce variable
refactoring.introduce.variable.dialog.title=\u63d0\u53d6\u53d8\u91cf
refactoring.introduce.variable.scope.error=\u540d\u79f0\u4e0e\u73b0\u6709\u53d8\u91cf\u6216\u53c2\u6570\u51b2\u7a81

# introduce constant
refactoring.introduce.constant.dialog.title=\u63d0\u53d6\u5e38\u91cf
refactoring.introduce.constant.scope.error=\u540d\u79f0\u5df2\u5728\u8303\u56f4\u5185\u58f0\u660e

# introduce parameter
refactoring.introduce.parameter.dialog.title=\u63d0\u53d6\u53c2\u6570

# pull up
refactoring.pull.up.dialog.title=\u628a\u6210\u5458\u62c9\u5230
refactoring.pull.up.dialog.move.members.to.class=\u5c06\u6210\u5458\u79fb\u5230\u8bfe\u5802\u4e0a
refactoring.pull.up.dialog.members.to.be.moved=\u4ee5\u4e0b\u6210\u5458\u5c06\u88ab\u79fb\u52a8
refactoring.pull.up.error.cannot.perform.refactoring.using.selected.elements=\u4f7f\u7528\u9009\u5b9a\u7684\u5143\u7d20\u65e0\u6cd5\u6267\u884c\u62c9\u52a8\u6210\u5458
refactoring.pull.up.error.cannot.perform.refactoring.not.inside.class=\u4e0d\u80fd\u6267\u884c\u62c9\u6210\u5458\uff1a\u4e0d\u5728\u8bfe\u5802\u5185
refactoring.pull.up.error.cannot.perform.refactoring.no.base.classes=\u7c7b{0}\u6ca1\u6709\u8d85\u7c7b\uff0c\u6216\u8005\u5b83\u4eec\u90fd\u4e0d\u80fd\u7528\u4e8e\u91cd\u6784

# push down
refactoring.push.down.dialog.title=\u63a8\u4ece\u4e0b\u9762\u7684\u6210\u5458
refactoring.push.down.error.cannot.perform.refactoring.using.selected.elements=\u4f7f\u7528\u9009\u5b9a\u5143\u7d20\u65e0\u6cd5\u6267\u884c\u63a8\u9001\u6210\u5458
refactoring.push.down.error.cannot.perform.refactoring.not.inside.class=\u4e0d\u80fd\u6267\u884cpull\u6210\u5458\uff1a\u4e0d\u5728\u8bfe\u5802\u5185

# inline
refactoring.inline.local.multiassignment=\u5b9a\u4e49\u5728\u591a\u91cd\u5206\u914d\u4e2d

# extract method
refactoring.extract.method=\u63d0\u53d6\u65b9\u6cd5
refactoring.extract.method.error.interrupted.execution.flow=\u6267\u884c\u6d41\u7a0b\u4e2d\u65ad\u65f6\u65e0\u6cd5\u6267\u884c\u91cd\u6784
refactoring.extract.method.error.star.import=\u4ee3\u7801\u5757\u5185\u7684\u661f\u5f62\u5bfc\u5165\u8bed\u53e5\u4e0d\u80fd\u6267\u884c\u91cd\u6784
refactoring.extract.method.error.bad.selection=\u65e0\u6cd5\u4f7f\u7528\u6240\u9009\u5143\u7d20\u6267\u884c\u63d0\u53d6\u65b9\u6cd5
refactoring.extract.method.error.name.clash=\u65b9\u6cd5\u540d\u79f0\u4e0e\u73b0\u6709\u540d\u79f0\u51b2\u7a81
refactoring.extract.method.error.returns=\u4ee3\u7801\u7247\u6bb5\u4e2d\u4e0d\u80fd\u63d0\u53d6\u8fd4\u56de\u6307\u4ee4\u7684\u65b9\u6cd5
refactoring.extract.method.error.local.variable.modifications=\u4e0d\u80fd\u4ece\u4ee3\u7801\u7247\u6bb5\u4e2d\u7684\u5c40\u90e8\u53d8\u91cf\u4fee\u6539\u8868\u8fbe\u5f0f\u8fdb\u884c\u91cd\u6784
refactoring.extract.method.error.local.variable.modifications.and.returns=\u4e0d\u80fd\u4f7f\u7528\u5c40\u90e8\u53d8\u91cf\u4fee\u9970\u4ece\u8868\u8fbe\u5f0f\u8fdb\u884c\u91cd\u6784\uff0c\u5e76\u5728\u4ee3\u7801\u7247\u6bb5\u5185\u8fd4\u56de\u6307\u4ee4
refactoring.extract.method.error.empty.fragment=\u4e0d\u80fd\u4ece\u7a7a\u4ee3\u7801\u7247\u6bb5\u6267\u884c\u91cd\u6784
refactoring.extract.method.error.yield=\u4ee3\u7801\u5757\u4e2d\u7684'yield'\u8bed\u53e5\u4e0d\u80fd\u6267\u884c\u91cd\u6784
refactoring.extract.method.error.class.level=\u4e0d\u80fd\u5728\u8bfe\u5802\u4e0a\u8fdb\u884c\u91cd\u6784


# extract superclass
refactoring.extract.super.target.path.outside.roots=\u76ee\u6807\u76ee\u5f55\u5728\u9879\u76ee\u4e4b\u5916\u3002\u5fc5\u987b\u4f4d\u4e8e\u5185\u5bb9\u6839\u76ee\u5f55\u5185
refactoring.extract.super.target.class.already.exists=\u7c7b\u201c{0}\u201d\u5df2\u7ecf\u5b58\u5728\u4e8e\u8fd9\u4e2a\u6a21\u5757\u4e2d
refactoring.extract.super.name.0.must.be.ident=\u540d\u79f0\u201c{0}\u201d\u65e0\u6548\u3002\u5fc5\u987b\u662f\u6709\u6548\u7684Python\u6807\u8bc6\u7b26
refactoring.extract.super.class.no.members.allowed=\u6ca1\u6709\u4efb\u4f55\u6210\u5458\u53ef\u4ee5\u88ab\u63d0\u53d6

# move
refactoring.move.choose.destination.file.title=\u9009\u62e9\u76ee\u6807\u6587\u4ef6
refactoring.move.error.destination.file.contains.class.$0=\u76ee\u6807\u6587\u4ef6\u5df2\u7ecf\u5305\u542b\u540d\u4e3a\u201c{0}\u201d\u7684\u7c7b
refactoring.move.error.destination.file.contains.function.$0=\u76ee\u6807\u6587\u4ef6\u5df2\u5305\u542b\u540d\u4e3a\u201c{0}\u201d\u7684\u51fd\u6570
refactoring.move.error.destination.file.contains.global.variable.$0=\u76ee\u6807\u6587\u4ef6\u5df2\u5305\u542b\u540d\u4e3a\u201c{0}\u201d\u7684\u5168\u5c40\u53d8\u91cf
refactoring.move.error.cannot.use.module.name.$0=\u5728\u5bfc\u5165\u4e2d\u4e0d\u80fd\u4f7f\u7528\u6a21\u5757\u540d\u79f0\u201c{0}\u201d

# move module members (top-level)
refactoring.move.module.members=\u79fb\u52a8\u6a21\u5757\u6210\u5458
refactoring.move.module.members.dialog.title=\u79fb\u52a8\u6a21\u5757\u6210\u5458
refactoring.move.module.members.dialog.table.title=\u6279\u91cf\u79fb\u52a8(&M)
refactoring.move.module.members.dialog.description.class=\u79fb\u52a8\u7c7b{0}
refactoring.move.module.members.dialog.description.function=\u79fb\u52a8\u529f\u80fd{0}
refactoring.move.module.members.dialog.description.variable=\u79fb\u52a8\u5168\u5c40\u53d8\u91cf{0}
refactoring.move.module.members.dialog.description.selection=\u79fb\u52a8\u9009\u5b9a\u7684\u5143\u7d20
refactoring.move.module.members.error.cannot.place.elements.into.nonpython.file=\u4e0d\u80fd\u5c06\u5143\u7d20\u653e\u7f6e\u5230\u975ePython\u6587\u4ef6\u4e2d
refactoring.move.module.members.error.selection=\u65e0\u6cd5\u4f7f\u7528\u6240\u9009\u5143\u7d20\u6267\u884c\u91cd\u6784

# Make function top-level
refactoring.make.method.top.level.dialog.title=\u4f7f\u65b9\u6cd5\u9876\u7ea7
refactoring.make.method.top.level.dialog.description=\u5c06\u65b9\u6cd5{0}\u79fb\u5230\u9876\u5c42

refactoring.make.local.function.top.level.dialog.title=\u4f7f\u672c\u5730\u529f\u80fd\u8fbe\u5230\u9876\u7ea7\u6c34\u5e73
refactoring.make.local.function.top.level.dialog.description=\u5c06\u672c\u5730\u51fd\u6570{0}\u79fb\u5230\u9876\u5c42

refactoring.make.function.top.level.error.nonlocal.writes=\u4e0d\u80fd\u79fb\u52a8\u975e\u5c40\u90e8\u5199\u5165\u529f\u80fd
refactoring.make.function.top.level.error.self.reads=\u4e0d\u80fd\u4ece\u5916\u90e8\u8303\u56f4\u79fb\u52a8\u5305\u542b\u201c\u81ea\u6211\u201d\u53c2\u6570\u7528\u6cd5\u7684\u51fd\u6570
refactoring.make.function.top.level.error.outer.scope.reads=\u5927\u70ae\u79fb\u52a8\u4ece\u5916\u90e8\u8303\u56f4\u5f15\u7528\u540d\u79f0\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.private.attributes=\u4e0d\u80fd\u79fb\u52a8\u5f15\u7528\u79c1\u6709\u5b9e\u4f8b\u5c5e\u6027\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.attribute.writes=\u65e0\u6cd5\u79fb\u52a8\u5199\u5165\u5b9e\u4f8b\u5c5e\u6027\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.method.calls=\u65e0\u6cd5\u79fb\u52a8\u8c03\u7528\u540c\u4e00\u7c7b\u7684\u5176\u4ed6\u65b9\u6cd5\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.special.usage.of.self=\u4e0d\u80fd\u79fb\u52a8\u5305\u542b\u201c\u81ea\u6211\u201d\u53c2\u6570\u7684\u7279\u6b8a\u7528\u6cd5\u7684\u65b9\u6cd5



#change signature
refactoring.change.signature.usage.view.declarations.header=\u51fd\u6570\u88ab\u91cd\u6784
refactoring.change.signature.dialog.validation.name.defined=\u540d\u79f0\u5df2\u5728\u8303\u56f4\u5185\u5b9a\u4e49
refactoring.change.signature.dialog.validation.function.name=\u51fd\u6570\u540d\u79f0\u4e0d\u6b63\u786e
refactoring.change.signature.dialog.validation.parameter.name=\u53c2\u6570\u540d\u79f0\u4e0d\u6b63\u786e
refactoring.change.signature.dialog.validation.multiple.star=\u591a\u4e2a*\u53c2\u6570\u662f\u4e0d\u5141\u8bb8\u7684
refactoring.change.signature.dialog.validation.multiple.double.star=\u591a\u4e2a**\u53c2\u6570\u662f\u4e0d\u5141\u8bb8\u7684
refactoring.change.signature.dialog.validation.default.missing=\u7f3a\u7701\u503c\u7f3a\u5931
refactoring.change.signature.dialog.validation.parameter.missing=\u53c2\u6570\u540d\u79f0\u4e22\u5931
refactoring.change.signature.dialog.default.value.checkbox=\u5728\u7b7e\u540d\u4e2d\u4f7f\u7528\u9ed8\u8ba4\u503c:
refactoring.change.signature.dialog.default.value.label=\u9ed8\u8ba4\u503c:
refactoring.change.signature.dialog.name.label=\u540d\u79f0:
refactoring.change.signature.find.usages.of.base.class={1}\u7c7b\u7684\u65b9\u6cd5{0}\n\u8986\u76d6\u7c7b{2}\u7684\u65b9\u6cd5\u3002\n\u4f60\u60f3\u91cd\u6784\u7684\u57fa\u672c\u65b9\u6cd5\uff1f
refactoring.change.signature.error.wrong.caret.position.method.name=\u8131\u5b57\u7b26\u5e94\u8be5\u88ab\u5b9a\u4f4d\u5728\u8981\u88ab\u91cd\u6784\u7684\u65b9\u6cd5\u7684\u540d\u5b57\u4e0a
refactoring.change.signature.error.lambda.call=Caret\u5b9a\u4f4d\u5728lambda\u7535\u8bdd\u4e0a
refactoring.change.signature.error.tuple.parameters=\u51fd\u6570\u5305\u542b\u5143\u7ec4\u53c2\u6570
refactoring.change.signature.error.not.under.source.root=\u51fd\u6570\u4e0d\u5728\u6e90\u4ee3\u7801\u6839\u76ee\u5f55\u4e0b

# convert module to package
refactoring.convert.module.to.package.title=\u5c06\u6a21\u5757\u8f6c\u6362\u4e3a\u5305

# convert module
refactoring.convert.package.to.module.title=\u5c06\u6a21\u5757\u8f6c\u6362\u4e3a\u5305
refactoring.convert.package.to.module.error.not.empty.package=\u5305\u201c{0}\u201d\u4e0d\u4e3a\u7a7a


### Annotators ###
ANN.deleting.none=\u5220\u9664\u65e0
ANN.assign.to.none=\u5206\u914d\u7ed9\u65e0
ANN.cant.assign.to.call=\u4e0d\u80fd\u5206\u914d\u7ed9\u51fd\u6570\u8c03\u7528
ANN.cant.delete.call=\u65e0\u6cd5\u5220\u9664\u51fd\u6570\u8c03\u7528
ANN.cant.aug.assign.to.generator=\u589e\u5f3a\u5206\u914d\u7ed9\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.aug.assign.to.tuple.or.generator=\u589e\u5f3a\u5206\u914d\u7ed9\u5143\u7ec4\u6587\u5b57\u6216\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.assign.to.generator=\u5206\u914d\u7ed9\u751f\u6210\u5668\u8868\u8fbe\u5f0f\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.assign.to.operator=\u4e0d\u80fd\u5206\u914d\u7ed9\u64cd\u4f5c\u5458
ANN.cant.assign.to.parens=\u65e0\u6cd5\u6307\u5b9a\u7ed9()
ANN.cant.aug.assign.to.list.or.comprh=\u589e\u5f3a\u5206\u914d\u5217\u51fa\u6587\u5b57\u6216\u7406\u89e3\u4e0d\u53ef\u80fd
ANN.cant.assign.to.comprh=\u65e0\u6cd5\u5206\u914d\u7ed9\u5217\u8868\u7406\u89e3
ANN.cant.assign.to.dict.comprh=\u4e0d\u80fd\u5206\u914d\u7ed9\u8bcd\u5178\u7684\u7406\u89e3
ANN.cant.assign.to.set.comprh=\u4e0d\u80fd\u5206\u914d\u7ed9\u7406\u89e3
ANN.cant.aug.assign.to.comprh=\u589e\u5f3a\u5206\u914d\u5217\u8868\u7406\u89e3\u4e0d\u53ef\u80fd
ANN.cant.aug.assign.to.dict.comprh=\u589e\u5f3a\u5206\u914d\u5bf9\u8bcd\u5178\u7684\u7406\u89e3\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.aug.assign.to.set.comprh=\u589e\u5f3a\u5206\u914d\u4e0d\u80fd\u8bbe\u7f6e\u7406\u89e3
ANN.cant.assign.to.literal=\u4e0d\u80fd\u5206\u914d\u7ed9\u6587\u5b57
ANN.cant.delete.literal=\u65e0\u6cd5\u5220\u9664\u6587\u5b57
ANN.cant.assign.to.lambda=\u4e0d\u80fd\u5206\u914d\u7ed9lambda

ANN.break.outside.loop=\u201c\u5faa\u73af\u201d\u5916
ANN.continue.outside.loop='\u7ee7\u7eed'\u5916\u90e8\u5faa\u73af
ANN.cant.continue.in.finally='finally'\u5b50\u53e5\u4e2d\u4e0d\u652f\u6301'continue'
ANN.default.except.must.be.last=\u9ed8\u8ba4'\u9664\u4e86\uff1a'\u5fc5\u987b\u662f\u6700\u540e\u4e00\u4e2a

ANN.$0.both.global.and.param=\u540d\u79f0\u201c{0}\u201d\u7528\u4f5c\u53c2\u6570\u548c\u5168\u5c40
ANN.$0.assigned.before.global.decl=\u5728\u5168\u5c40\u58f0\u660e\u4e4b\u524d\u5206\u914d\u540d\u79f0\u201c{0}\u201d

ANN.duplicate.param.name=\u91cd\u590d\u7684\u53c2\u6570\u540d\u79f0
ANN.starred.param.after.kwparam=**\u53c2\u6570\u540e\u9762\u7684\u53c2\u6570
ANN.regular.param.after.vararg=*\u53c2\u6570\u540e\u7684\u5e38\u89c4\u53c2\u6570
ANN.regular.param.after.keyword=**\u53c2\u6570\u540e\u7684\u5e38\u89c4\u53c2\u6570
ANN.non.default.param.after.default=\u975e\u9ed8\u8ba4\u53c2\u6570\u9075\u5faa\u9ed8\u8ba4\u53c2\u6570
ANN.named.parameters.after.star=named parameters must follow bare *
ANN.tuple.py3=Python 3\u4e0d\u652f\u6301\u5143\u7ec4\u53c2\u6570\u89e3\u5305
ANN.multiple.args=multiple * parameters are not allowed
ANN.multiple.kwargs=multiple ** parameters are not allowed

ANN.star.import.at.top.only='import *'\u53ea\u5141\u8bb8\u5728\u6a21\u5757\u7ea7\u522b

ANN.missing.closing.quote=\u7f3a\u5c11\u7ed3\u675f\u8bed[{0}]
ANN.missing.closing.triple.quotes=\u7f3a\u5c11\u5173\u95ed\u4e09\u91cd\u5f15\u53f7

ANN.method.$0.removed.use.$1=\u65b9\u6cd5\u201c{0}\u201d\u5df2\u88ab\u79fb\u9664\uff0c\u8bf7\u6539\u4e3a\u4f7f\u7528\u201c{1}\u201d
ANN.method.$0.removed=\u65b9\u6cd5\u201c{0}\u201d\u5df2\u5220\u9664

### parsing
PARSE.expected.expression=\u8868\u8fbe\u9884\u671f
PARSE.expected.rbracket=']'\u9884\u8ba1
PARSE.expected.expr.or.comma.or.bracket=\u9884\u671f\u7684\u8868\u8fbe\uff0c'\uff0c'\u6216']'
PARSE.expected.in=\u9884\u671f\u4e2d
PARSE.expected.for.or.bracket=']'\u6216'for'\u9884\u671f
PARSE.expected.comma=\u9884\u671f\u4e3a ','
PARSE.expected.colon=':' \u9884\u8ba1
PARSE.expected.rpar=\u9884\u671f\u4e3a ')'
PARSE.expected.lpar=\u9884\u671f\u4e3a '('
PARSE.expected.rbrace='}'\u9884\u8ba1
PARSE.expected.tick=\u201c(\u53cd\u5411\uff09\u9884\u8ba1
PARSE.expected.name=\u9884\u671f\u7684\u540d\u5b57
PARSE.expected.colon.or.rbracket=\u9884\u671f\u4e3a ':' \u6216 ']'
PARSE.expected.comma.or.rpar=',' \u6216 ')'
PARSE.expected.else=\u201c\u5176\u4ed6\u201d\u9884\u8ba1

PARSE.expected.identifier=\u6807\u8bc6\u7b26\u9884\u671f
PARSE.expected.comma.lpar.rpar=',' \u6216 '(' \u6216 ')'
PARSE.expected.statement.break=\u58f0\u660e\u4e2d\u65ad\u9884\u8ba1
PARSE.expected.@.or.def=\u671f\u671b '@' \u6216 'def'
PARSE.expected.formal.param.name=\u9884\u671f\u7684\u5f62\u5f0f\u53c2\u6570\u540d\u79f0

### qiuck doc generator
QDOC.module.path.unknown=(\u6a21\u5757\u8def\u5f84\u672a\u77e5\uff09
QDOC.epydoc.python2.sdk.not.found=\u60a8\u9700\u8981\u914d\u7f6ePython 2 SDK\u624d\u80fd\u5448\u73b0<a href='http://epydoc.sourceforge.net/'> Epydoc </a>\u6587\u6863
QDOC.local.sdk.not.found=You need a configured local Python SDK to render docstrings.
QDOC.assigned.to=Assigned to:
QDOC.documentation.is.copied.from=Documentation is copied from:
QDOC.accessor.kind=Accessor kind:
QDOC.raises=Raises:
QDOC.keyword.args=Keyword args:


runcfg.tests.cant_rerun=\u7531\u4e8e\u6d4b\u8bd5ID\u65e0\u6cd5\u89e3\u6790\uff0c\u56e0\u6b64\u65e0\u6cd5\u91cd\u65b0\u8fd0\u884c\u6d4b\u8bd5\u3002\u5c1d\u8bd5\u5220\u9664\u8fd0\u884c\u914d\u7f6e\uff0c\u5e76\u4f7f\u7528\u53f3\u952e\u5355\u51fb\u65b0\u5efa\u4e00\u4e2a\u3002
runcfg.tests.empty_suite=Empty suite

### doctest run conf
runcfg.doctest.display_name=\u6587\u6863\u6d4b\u8bd5
runcfg.doctest.description=Python\u7684doctests\u8fd0\u884c\u914d\u7f6e

### nosetests run conf
runcfg.nosetests.display_name=Nosetests
runcfg.nosetests.description=Python\u7684nosetests\u8fd0\u884c\u914d\u7f6e

### pytest run conf
runcfg.pytest.display_name=pytest
runcfg.pytest.description=pytest run configuration
runcfg.pytest.target=\u76ee\u6807(&T):
runcfg.pytest.parameters=\u9009\u9879(&O):
runcfg.pytest.keywords=\u5173\u952e\u8bcd(&K):

### trial run conf
runcfg.trial.display_name=Twisted Trial

### test run configuration
runcfg.test.display_name=Python\u6d4b\u8bd5
runcfg.test.description=\u7531PyCharm\u652f\u6301\u7684Python\u6846\u67b6

### unittest run configuration
runcfg.unittest.display_name=\u5355\u5143\u6d4b\u8bd5
runcfg.unittest.description=Python\u7684unittest\u8fd0\u884c\u914d\u7f6e
runcfg.unittest.no_script_name=\u8bf7\u6307\u5b9a\u811a\u672c\u540d\u79f0
runcfg.unittest.no_module_name=Please specify module qualified name
runcfg.unittest.no_class_name=\u8bf7\u6307\u5b9a\u73ed\u7ea7\u540d\u79f0
runcfg.unittest.no_method_name=\u8bf7\u6307\u5b9a\u65b9\u6cd5\u540d\u79f0
runcfg.unittest.no_folder_name=\u8bf7\u6307\u5b9a\u5177\u6709\u6d4b\u8bd5\u7684\u6587\u4ef6\u5939
runcfg.unittest.incorrect.script=\u6d4b\u8bd5\u811a\u672c\u540d\u79f0\u5e94\u4ee5\u201c\u6d4b\u8bd5\u201d\u524d\u7f00\u5f00\u5934
runcfg.unittest.dlg.tests_group_title=\u6d4b\u8bd5:
runcfg.unittest.dlg.test_script_label=\u811a\u672c:
runcfg.unittest.dlg.class_label=\u7c7b:
runcfg.unittest.dlg.method_label=\u65b9\u6cd5:
runcfg.unittest.dlg.function_label=\u529f\u80fd:
runcfg.unittest.dlg.folder_path=\u5939:
runcfg.unittest.dlg.test_type_title=\u6d4b\u8bd5:
runcfg.unittest.dlg.all_in_folder_title=\u5168\u90e8\u5728\u6587\u4ef6\u5939\u4e2d
runcfg.unittest.dlg.all_in_script_title=\u811a\u672c
runcfg.unittest.dlg.test_class_title=\u7c7b
runcfg.unittest.dlg.test_method_title=\u65b9\u6cd5
runcfg.unittest.dlg.folder_title=\u6d4b\u8bd5\u6587\u4ef6\u5939:
runcfg.unittest.no_valid_sdk=\u8bf7\u9009\u62e9\u4e00\u4e2a\u6709\u6548\u7684Python\u4e2d\u95f4\u4eba
runcfg.unittest.no_module_sdk=\u8bf7\u9009\u62e9\u4e00\u4e2a\u6709\u6548\u7684Python SDK\u6a21\u5757
runcfg.unittest.no_sdk=\u8bf7\u6307\u5b9a\u4e00\u4e2aPython SDK
runcfg.unittest.dlg.select.folder.path=\u9009\u62e9\u6587\u4ef6\u5939\u8def\u5f84:
runcfg.unittest.dlg.select.script.path=\u9009\u62e9\u811a\u672c\u8def\u5f84:
runcfg.unittest.dlg.interpreter_options_title=\u53e3\u8bd1\u5458\u9009\u9879:
runcfg.unittest.dlg.messages.working.dir=\u5de5\u4f5c\u76ee\u5f55:
runcfg.labels.script_parameters=&Parameters:
runcfg.labels.script=\u811a\u672c(&S):
runcfg.labels.environment_variables=\u73af\u5883\u53d8\u91cf(&E):
runcfg.labels.interpreter=\u4f7f\u7528\u6307\u5b9a\u7684\u89e3\u91ca\u5668(&U):
runcfg.labels.interpreter_options=\u53e3\u8bd1\u5458\u9009\u9879(&O):
runcfg.labels.working_directory=\u5de5\u4f5c\u76ee\u5f55(&W):
runcfg.captions.script_parameters_dialog=\u8f93\u5165\u811a\u672c\u53c2\u6570
runcfg.captions.interpreter_options_dialog=\u8f93\u5165\u89e3\u91ca\u5668\u9009\u9879
sdk.error.invalid.interpreter.name.$0=\u65e0\u6548\u7684Python\u4e2d\u6587\u540d\u79f0\u201c{0}\u201d\uff01
sdk.select.path=\u9009\u62e9Python\u89e3\u91ca\u5668
runcfg.unittest.dlg.pattern=\u6a21\u5f0f:

runcfg.testing.no.test.framework=\u5728\u9009\u5b9a\u7684\u89e3\u91ca\u5668\u4e2d\u627e\u4e0d\u5230{0}\u4e9a\u519b

# Consoles messages
python.console=Python\u63a7\u5236\u53f0


# UI messages
MSG.title.bad.sdk=\u65e0\u6548\u7684Python SDK
MSG.cant.setup.sdk.$0=\u65e0\u6cd5\u8bbe\u7f6epython SDK \n\u5728{0}\u3002\nSDK\u4f3c\u4e4e\u65e0\u6548\u3002


#Buildout
buildout=\u6269\u5efa
buildout.unresolved.part.inspection=\u5efa\u7acb\u914d\u7f6e\u672a\u89e3\u51b3\u7684\u90e8\u5206\u68c0\u67e5
buildout.unresolved.part.inspection.msg=\u672a\u89e3\u51b3\u7684\u90e8\u5206\u53c2\u8003
runcfg.unittest.dlg.test_function_title=\u529f\u80fd
runcfg.unittest.dlg.keywords=\u5173\u952e\u8bcd:
run.configuration.remote.debug.name=Python\u8fdc\u7a0b\u8c03\u8bd5
run.configuration.type.description=\u542f\u52a8\u8fdc\u7a0b\u8c03\u8bd5\u670d\u52a1\u5668
run.configuration.show.command.line.action.name=\u663e\u793aPython\u63d0\u793a

unable.to.stop=\u5f53\u524d\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b\u4e0d\u80fd\u505c\u6b62\u3002\u9996\u5148\u624b\u52a8\u6740\u6b7b\u5b83\u3002

#Debug

debug.popup.title.step.into.function=\u6b65\u5165\u529f\u80fd

debug.notification.group=Python Debugger
debug.notification.title.connection.failed=Connection to Python debugger failed

remote.debug.info=\u4fe1\u606f
remote.debug.server.hint=Launch this debug configuration to start the Debug Server.
remote.debug.server.hint1.5=\u66f4\u65b0\u60a8\u7684\u811a\u672c:
remote.debug.server.hint2=1. Add pydevd-pycharm.egg from the PyCharm installation to the Python path or execute:
remote.debug.server.hint3=pip install pydevd-pycharm
remote.debug.server.hint4=2. Add the following command to connect to the Debug Server:
remote.debug.settings=\u8bbe\u7f6e
remote.debug.remote.host=\u8fdc\u7a0b\u4e3b\u673a
remote.debug.port=\u6e2f\u53e3:
remote.debug.use.path.mapping=\u4f7f\u7528\u8def\u5f84\u6620\u5c04
remote.debug.remote.root.folder=\u8fdc\u7a0b\u8def\u5f84\u524d\u7f00:
remote.debug.local.root.folder=\u672c\u5730\u8def\u5f84\u524d\u7f00:
remote.debug.local.host=\u672c\u5730\u4e3b\u673a\u540d\u79f0:
remote.debug.redirect.output=\u5c06\u8f93\u51fa\u91cd\u5b9a\u5411\u5230\u63a7\u5236\u53f0
remote.debug.suspend.on.connect=\u8fde\u63a5\u540e\u6682\u505c

# SDK / skeletons
sdk.errorlog.$0.mods.fail.in.$1.sdks={0,choice,|1#1 module|2#{0,number} modules} \u5728 {1,choice, |1#1 interpreter|2#{1,number} interpreters} \u4e2d\u5931\u8d25<a href=\"#\">\u8be6\u60c5...</a>
sdk.errorlog.$0.mods.fail.in.$1.sdks.$2.completely={0,choice,|1#1 module|2#{0,number} modules}\u5728{1,choice, |1#1 interpreter|2#{1,number} interpreters}, {2,choice, |1#1 interpreter|2#{2,number} interpreters}\u5931\u8d25</i>\u5b8c\u6210<a href=\"#\">\u8be6\u60c5...</a>
sdk.some.skeletons.failed=\u4e00\u4e9b\u9ab7\u9ac5\u672a\u80fd\u4ea7\u751f
sdk.error.dialog.problems=\u6846\u67b6\u751f\u6210\u95ee\u9898
sdk.error.dialog.failed.sdks=\u5931\u8d25\u7684\u89e3\u91ca\u5668
sdk.error.dialog.failed.modules=\u5931\u8d25\u7684\u6a21\u5757
sdk.error.dialog.were.blacklisted=\u5f53\u6a21\u5757\u66f4\u65b0\u6216\u65b0\u7248\u672c\u7684\u53d1\u751f\u5668\u53ef\u7528\u65f6\uff0c\u5c06\u518d\u6b21\u5c1d\u8bd5\u4e3a\u4e0a\u8ff0\u6a21\u5757\u751f\u6210\u6846\u67b6\u3002
sdk.gen.querying.$0=\u67e5\u8be2{0}\u7684\u6846\u67b6\u751f\u6210\u5668...
sdk.gen.updating.builtins.$0=\u66f4\u65b0{0}\u7684\u5185\u7f6e\u7ed3\u6784\u7684\u6846\u67b6...
sdk.gen.updating.$0=\u66f4\u65b0{0}\u7684\u6846\u67b6...
sdk.gen.cleaning.$0=\u6e05\u7406{0}\u7684\u6846\u67b6...
sdk.gen.reloading=\u91cd\u65b0\u52a0\u8f7d\u751f\u6210\u7684\u6846\u67b6...
sdk.gen.reading.versions.file=\u9605\u8bfb\u7248\u672c\u6587\u4ef6...
sdk.gen.notify.converting.old.skels=\u8f6c\u6362\u65e7\u7684\u6846\u67b6
sdk.gen.notify.converting.text=\u4e8c\u8fdb\u5236\u6a21\u5757\u7684\u6846\u67b6\u4f3c\u4e4e\u6765\u81ea\u65e7\u7248\u672c\u3002<br/>\u8fd9\u4e9b\u5c06\u88ab\u5b8c\u5168\u91cd\u65b0\u751f\u6210\uff0c\u8fd9\u5c06\u9700\u8981\u4e00\u4e9b\u65f6\u95f4\uff0c\u4f46\u53ea\u4f1a\u53d1\u751f\u4e00\u6b21</i>\u3002<br/>\u4e0b\u4e00\u6b21\u6253\u5f00\u9879\u76ee\uff0c\u53ea\u6709\u65b0\u7684\u6216\u66f4\u65b0\u7684\u4e8c\u8fdb\u5236\u6a21\u5757\u7684\u6846\u67b6\u5c06\u88ab\u91cd\u65b0\u751f\u6210\u3002
sdk.gen.updating.interpreter=\u66f4\u65b0Python\u89e3\u91ca\u5668
sdk.scanning.installed.packages=\u626b\u63cf\u5df2\u5b89\u88c5\u7684\u8f6f\u4ef6\u5305
sdk.gen.stubs.for.binary.modules=\u751f\u6210\u4e8c\u8fdb\u5236\u6a21\u5757{0}\u7684\u5b58\u6839

# Active SDK configurable and related dialogs
active.sdk.dialog.show.all.item=Show All...
active.sdk.dialog.project.interpreter=\u9879\u76ee\u7ffb\u8bd1:
active.sdk.dialog.project.interpreter.path.mappings=\u8def\u5f84\u6620\u5c04:
active.sdk.dialog.project.interpreter.path.mappings.default.project.error=\u6253\u5f00\u6216\u521b\u5efa\u9879\u76ee\u6765\u914d\u7f6e\u6620\u5c04

sdk.details.step.add=Add...
sdk.details.step.create.virtual.env=\u521b\u5efaVirtualEnv
sdk.details.step.create.conda.env=\u521b\u5efaConda Env
sdk.details.step.show.all=Show All...

sdk.details.dialog.title=\u9879\u76ee\u53e3\u8bd1\u5458
sdk.details.dialog.hide.all.virtual.envs=Hide virtual environments associated with other projects
sdk.details.dialog.show.interpreter.paths=\u663e\u793a\u6240\u9009\u89e3\u91ca\u5668\u7684\u8def\u5f84
sdk.details.dialog.error.duplicate.name=\u8bf7\u4e3a\u89e3\u91ca\u8005\u6307\u5b9a\u4e00\u4e2a\u552f\u4e00\u7684\u540d\u5b57

sdk.edit.dialog.title=\u7f16\u8f91Python\u89e3\u91ca\u5668
sdk.edit.dialog.associate.virtual.env.with.path=\u5c06\u6b64\u865a\u62df\u73af\u5883\u4e0e{0}\u5173\u8054
sdk.edit.dialog.associate.virtual.env.current.project=\u5c06\u6b64\u73af\u5883\u4e0e\u5f53\u524d\u9879\u76ee\u76f8\u5173\u8054
sdk.edit.dialog.specify.interpreter.path=\u6307\u5b9a\u89e3\u91ca\u5668\u8def\u5f84

sdk.paths.dialog.title=\u53e3\u8bd1\u5458\u8def\u5f84
sdk.paths.dialog.reload.paths=\u91cd\u65b0\u52a0\u8f7d\u8def\u5f84\u5217\u8868
sdk.paths.dialog.added.by.user.suffix=(\u7531\u7528\u6237\u6dfb\u52a0\uff09
sdk.paths.dialog.removed.by.user.suffix=(\u7531\u7528\u6237\u5220\u9664\uff09

sdk.create.venv.dialog.creating.venv=\u521b\u5efa\u865a\u62df\u73af\u5883
sdk.create.venv.dialog.make.available.to.all.projects=\u63d0\u4f9b\u7ed9\u6240\u6709\u9879\u76ee
sdk.create.venv.dialog.select.venv.location=\u9009\u62e9\u865a\u62df\u73af\u5883\u7684\u4f4d\u7f6e
sdk.create.venv.dialog.error.not.empty.directory=\u76ee\u5f55\u4e0d\u662f\u7a7a\u7684
sdk.create.venv.dialog.error.empty.venv.name=VirtualEnv\u540d\u79f0\u4e0d\u80fd\u4e3a\u7a7a
sdk.create.venv.dialog.error.empty.venv.location=\u76ee\u7684\u5730\u76ee\u5f55\u8def\u5f84\u4e0d\u80fd\u4e3a\u7a7a
sdk.create.venv.dialog.error.invalid.directory.name=\u65e0\u6548\u7684\u76ee\u5f55\u540d\u79f0
sdk.create.venv.dialog.error.failed.to.create.venv=\u65e0\u6cd5\u521b\u5efa\u865a\u62df\u73af\u5883

sdk.create.venv.dialog.title=\u521b\u5efa\u865a\u62df\u73af\u5883
sdk.create.venv.dialog.label.name=\u540d\u79f0:
sdk.create.venv.dialog.label.location=\u4f4d\u7f6e:
sdk.create.venv.dialog.label.base.interpreter=\u57fa\u7840\u7ffb\u8bd1:
sdk.create.venv.dialog.label.inherit.global.site.packages=\u7ee7\u627f\u5168\u5c40\u7ad9\u70b9\u5305
sdk.create.venv.dialog.error.no.base.interpreter=\u9009\u62e9\u57fa\u7840\u89e3\u91ca\u5668

sdk.create.venv.conda.dialog.title=\u521b\u5efaConda\u73af\u5883
sdk.create.venv.conda.dialog.error.no.python.version=\u9009\u62e9python\u7248\u672c
sdk.create.venv.conda.dialog.label.python.version=Python\u7248\u672c:

# remote interpreters
remote.interpreter.add.title=\u6dfb\u52a0\u8fdc\u7a0b\u89e3\u91ca\u5668
remote.interpreter.configure.title=\u914d\u7f6e\u8fdc\u7a0bPython\u89e3\u91ca\u5668
remote.interpreter.configure.path.title=\u9009\u62e9Python\u89e3\u91ca\u5668
remote.interpreter.configure.temp.files.path.title=\u4e3aPyCharm\u52a9\u624b\u9009\u62e9\u6587\u4ef6\u5939
remote.interpreter.default.interpreter.path=\u5728/ usr / bin\u4e2d/\u87d2\u86c7
remote.interpreter.docker.default.interpreter.path=\u87d2\u86c7
remote.interpreter.unspecified.interpreter.path=\u6307\u5b9aPython\u89e3\u91ca\u5668\u8def\u5f84
remote.interpreter.unspecified.temp.files.path=\u6307\u5b9aPyCharm\u52a9\u624b\u7684\u8def\u5f84
remote.interpreter.configure.path.label=Python\u89e3\u91ca\u5668\u8def\u5f84:
remote.interpreter.configure.temp.files.path.label=PyCharm\u52a9\u624b\u8def\u5f84:
remote.interpreter.error.plugin.missing=\u8fdc\u7a0b\u4e3b\u673a\u8bbf\u95ee\u63d2\u4ef6\u4e22\u5931\u3002\u8bf7\u542f\u7528{0}\u4e2d\u7684\u63d2\u4ef6\u3002
remote.interpreter.configure.ssh.run_as_root_via_sudo.checkbox=Execute code using this interpreter with root privileges via sudo
remote.interpreter.configure.ssh.run_as_root_via_sudo.help=Sudo will be invoked only for launching remote interpreters through SSH connections. Files will be copied to the remote server with user's privileges.

# Message we display for inspection if user uses custom class type members that do not exist
custom.type.mimic.name=\u57fa\u4e8e{0}\u7684\u52a8\u6001\u7c7b


# CommandLine
commandLine.inspection.name=\u547d\u4ee4\u884c\u68c0\u67e5
commandLine.inspection.badCommand=\u9519\u8bef\u6216\u672a\u77e5\u7684\u547d\u4ee4\u3002\u786e\u4fdd\u8fd9\u4e2a\u547d\u4ee4\u771f\u7684\u5b58\u5728\u3002
commandLine.inspection.badOption=\u4e0d\u597d\u7684\u6216\u672a\u77e5\u7684\u9009\u9879\u3002\u786e\u4fdd\u8fd9\u4e2a\u9009\u9879\u771f\u7684\u5b58\u5728\u3002
commandLine.inspection.badArgument=\u53c2\u6570\u4e0d\u80fd\u6709\u8fd9\u4e2a\u503c\u3002\u4f7f\u7528\u81ea\u52a8\u5b8c\u6210\u6765\u68c0\u67e5\u53ef\u80fd\u7684\u503c\u5217\u8868\u3002
commandLine.inspection.excessArgument=\u8fd9\u91cc\u4e0d\u53ef\u80fd\u6709\u8fc7\u591a\u7684\u8bba\u636e\u6216\u8bba\u70b9
# What to display if argument is available here, but no name provided
commandLine.argumentHint.defaultName=\u53c2\u6570
# What to display of user entered junk
commandLine.commandNotFound=\u627e\u4e0d\u5230{0}\uff1a\u547d\u4ee4

# Window with actions
# "X" button title
windowWithActions.closeWindow=\u5173\u95ed\u7a97\u53e3
# "Stop" button title
windowWithActions.stopProcess=\u505c\u6b62\u6b63\u5728\u8fd0\u884c\u7684\u8fdb\u7a0b

formatter.imports.panel.title=\u8fdb\u53e3
formatter.imports.panel.optimize.imports=\u4f18\u5316\u8fdb\u53e3
formatter.imports.panel.sort.imports=\u6392\u5e8f\u5bfc\u5165\u8bed\u53e5
formatter.imports.panel.sort.names.in.from.imports=\u5728\u201cfrom\u201d\u5bfc\u5165\u4e2d\u6392\u5e8f\u5bfc\u5165\u7684\u540d\u79f0
formatter.imports.panel.from.imports.structure.title=Structure of \"from\" imports
formatter.imports.panel.from.imports.leave.as.is=Leave as is
formatter.imports.panel.from.imports.join.with.same.source=Join imports with the same source
formatter.imports.panel.from.imports.always.split=Always split imports
formatter.imports.panel.sort.by.type=\u5728\u4e00\u4e2a\u7ec4\u4e2d\u5355\u72ec\u6392\u5e8fplain\u548c\u201cfrom\u201d\u5bfc\u5165
formatter.imports.panel.sort.case.insensitively=Sort case-insensitively

formatter.panel.dict.alignment.do.not.align=\u4e0d\u8981\u5bf9\u9f50
formatter.panel.dict.alignment.align.on.colon=\u5bf9\u9f50\u5192\u53f7
formatter.panel.dict.alignment.align.on.value=\u5bf9\u51c6\u4ef7\u503c
formatter.panel.dict.alignment.label=\u5b57\u5178\u5bf9\u9f50:
formatter.panel.add.trailing.line.feed=\u5728\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u6362\u884c\u7b26

formatter.panel.use.continuation.indent.for.title=Use continuation indent for
formatter.panel.use.continuation.indent.for.arguments=Method call arguments
formatter.panel.use.continuation.indent.for.collection.literals=Collections and comprehensions

formatter.left.bracket = \u5de6\u62ec\u53f7
formatter.around.eq.in.named.parameter = around =\u5728\u547d\u540d\u53c2\u6570\u4e2d
formatter.around.eq.in.keyword.argument = around =\u5728\u5173\u952e\u5b57\u53c2\u6570\u4e2d
formatter.braces = \u80cc\u5e26
formatter.before.backslash = \u4e4b\u524d\u201c
formatter.before.hash = \u5728'#'\u4e4b\u524d
formatter.after.hash = \u5728'#'\u4e4b\u540e
formatter.around.top.level.imports = \u9876\u7ea7\u8fdb\u53e3\u540e:
formatter.after.local.imports=\u5f53\u5730\u8fdb\u53e3\u540e:
formatter.before.first.method=Before the first method:
formatter.around.top.level.classes.and.function=\u56f4\u7ed5\u9876\u7ea7\u8bfe\u7a0b\u548c\u529f\u80fd:
formatter.around.multiplicative.operators=\u4e58\u6cd5\u8fd0\u7b97\u7b26(*\uff0c@\uff0c/\uff0c\uff05\uff09
formatter.around.power.operator=\u7535\u529b\u8fd0\u8425\u5546(**\uff09
formatter.single.clause.statements=\u5355\u6761\u8bed\u53e5
formatter.multi.clause.statements=\u591a\u8bed\u53e5\u8bed\u53e5
formatter.force.new.line.after.colon=\u5192\u53f7\u540e\u5f3a\u5236\u6362\u884c
formatter.align.when.multiline=\u591a\u884c\u5bf9\u9f50
formatter.collections.and.comprehensions=\u6536\u85cf\u548c\u7406\u89e3
formatter.from.import.statements=\u201c\u6765\u81ea\u201d\u8fdb\u53e3\u8bed\u53e5
formatter.from.import.statements.force.parentheses.if.multiline=\u5982\u679c\u591a\u884c\u5f3a\u5236\u62ec\u53f7
formatter.from.import.statements.force.comma.if.multline=\u5982\u679c\u591a\u884c\uff0c\u5f3a\u5236\u5c3e\u968f\u9017\u53f7
formatter.dictionary.literals=\u5b57\u5178\u6587\u5b57
formatter.hang.closing.brackets=\u6302\u7740\u62ec\u53f7

smartKeys.insert.backslash.in.statement.on.enter=\u5728\u8bed\u53e5\u4e2d\u6309Enter\u65f6\u63d2\u5165\u53cd\u659c\u6760
smartKeys.insert.self.in.method=\u5b9a\u4e49\u65b9\u6cd5\u65f6\u63d2\u5165\u201c\u81ea\u6211\u201d
smartKeys.insert.type.placeholder.in.docstring.stub=\u5728\u6587\u6863\u6ce8\u91ca\u5b58\u6839\u4e2d\u63d2\u5165\u7c7b\u578b\u5360\u4f4d\u7b26

show.expression.type.no.expression.found=No expression found
runcfg.labels.module=Module:
remote.interpreter.wsl.default.interpreter.path=/usr/bin/python
