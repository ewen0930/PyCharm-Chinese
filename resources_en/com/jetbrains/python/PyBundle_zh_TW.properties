f###=\u901a\u7528\u8a5e###
GNAME.function=\u529f\u80fd
GNAME.class=\u985e\u5225
GNAME.var=\u8b8a\u6578
GNAME.item=\u9805\u76ee

# Actions and associated commands
ACT.CMD.use.import=\u4f7f\u7528\u532f\u5165\u7684\u6a21\u7d44
ACT.qualify.with.module=\u4f7f\u7528\u532f\u5165\u7684\u6a21\u7d44\u9032\u884c\u8a8d\u8b49
ACT.from.some.module.import=\u9032\u53e3\u65bc ...

### Quick fixes ###
QFIX.auto.import.family=\u9032\u53e3
QFIX.auto.import.import.this.name=\u532f\u5165\u9019\u500b\u540d\u5b57
QFIX.auto.import.import.name=\u532f\u5165\u300c{0}\u300d

QFIX.local.auto.import.family=\u672c\u6a5f\u532f\u5165
QFIX.local.auto.import.import.locally={0}\u5728\u672c\u6a5f

QFIX.add.import.add.import=\u65b0\u589e\u300c\u300d\u300c{0}\u300d\u300c\u300d

QFIX.add.parameter.self=\u65b0\u589e\u53c3\u6578\u300c{0}\u300d
QFIX.add.super=\u65b0\u589e\u8d85\u985e\u5225\u547c\u53eb

QFIX.add.property=\u70ba\u8a72\u6b04\u4f4d\u65b0\u589e\u5c6c\u6027
QFIX.use.property=\u4f7f\u7528\u5c6c\u6027\u7684\u6b04\u4f4d

QFIX.make.public=\u516c\u4e4b\u65bc\u773e

QFIX.convert.to.new.style=\u8f49\u63db\u70ba\u65b0\u98a8\u683c\u7684\u985e\u5225

QFIX.change.base.class=\u8b8a\u66f4\u57fa\u985e\u5225

QFIX.create.property=\u5efa\u7acb\u5c6c\u6027

QFIX.add.encoding=\u65b0\u589e\u7de8\u78bc\u5ba3\u544a

QFIX.NAME.parameters=\u51fd\u6578\u548c\u65b9\u6cd5\u7684\u53c3\u6578
QFIX.rename.parameter.to.$0=\u91cd\u65b0\u547d\u540d\u70ba\u300c{0}\u300d

QFIX.NAME.add.field.$0.to.class.$1=\u5c07\u6b04\u4f4d\u300c{0}\u300d\u65b0\u589e\u5230\u985e\u5225{1}
QFIX.added.constructor.$0.for.field.$1=\u5728\u985e\u5225<code> {0} </code>\u4e2d\u65b0\u589e\u4e86__init__\uff0c\u4ee5\u9069\u61c9\u65b0\u7684\u6b04\u4f4d<code> {1} </code>
QFIX.failed.to.add.field=<br/> <br/>\u7121\u6cd5\u65b0\u589e\u6b04\u4f4d\uff01<br/> <br/>

QFIX.NAME.add.method.$0.to.class.$1=\u5c07\u65b9\u6cd5{0}()\u65b0\u589e\u5230\u985e\u5225{1}
QFIX.failed.to.add.method=<br/> <br/>\u65b0\u589e\u65b9\u6cd5\u5931\u6557\uff01<br/> <br/>

QFIX.NAME.add.function.$0.to.module.$1=\u5728\u6a21\u7d44{1}\u4e2d\u5efa\u7acb\u51fd\u6578{0}()
QFIX.failed.to.add.function=<br/> <br/>\u7121\u6cd5\u65b0\u589e\u529f\u80fd\uff01<br/> <br/>

QFIX.action.failed=\u884c\u52d5\u5931\u6557

QFIX.remove.trailing.semicolon=\u522a\u9664\u5c3e\u96a8\u5206\u865f

QFIX.dict.creation=\u53d6\u4ee3\u5b57\u5178\u5efa\u7acb
QFIX.list.creation=\u53d6\u4ee3\u6e05\u55ae\u5efa\u7acb

QFIX.classic.class.transform=\u7e7c\u627f\u7269\u4ef6

QFIX.add.global=\u65b0\u589e\u5168\u5c40\u8a9e\u53e5

QFIX.simplify.$0=\u5c07\u5e03\u6797\u904b\u7b97\u5f0f\u53d6\u4ee3\u70ba\u300c{0}\u300d

QFIX.move.from.future.import=\u5c07\u300c__future__ import\u300d\u79fb\u52d5\u5230\u6b63\u78ba\u7684\u4f4d\u7f6e

QFIX.replace.equality=\u53d6\u4ee3\u5e73\u7b49

QFIX.redundant.parentheses=\u522a\u9664\u591a\u9918\u7684\u62ec\u865f

QFIX.augment.assignment=\u7528\u8ce6\u503c\u8ce6\u503c\u53d6\u4ee3\u8ce6\u503c

QFIX.chained.comparison=\u7c21\u5316\u93c8\u5f0f\u6bd4\u8f03

QFIX.statement.effect=\u7528\u51fd\u6578\u8abf\u7528\u53d6\u4ee3
QFIX.statement.effect.move.docstring=\u5c07\u6587\u4ef6\u5b57\u4e32\u79fb\u5230\u9069\u7576\u7684\u4f4d\u7f6e

QFIX.statement.effect.introduce.variable=\u5f15\u5165\u8b8a\u6578

QFIX.unresolved.reference=\u5c07\u300c{0}\u300d\u53d6\u4ee3\u70ba\u300c{1}\u3002{0}\u300d

QFIX.unresolved.reference.add.param.$0=\u5efa\u7acb\u53c3\u6578\u300c{0}\u300d
QFIX.unresolved.reference.add.param=\u5efa\u7acb\u53c3\u6578\u4f9b\u53c3\u8003

# UnresolvedRefCreateFunctionQuickFix
QFIX.unresolved.reference.create.function=\u5efa\u7acb\u529f\u80fd
QFIX.NAME.unresolved.reference.create.function=\u5efa\u7acb\u51fd\u6578\u300c{0}\u300d

QFIX.introduce.variable=\u70ba\u8a9e\u53e5\u5f15\u5165\u8b8a\u6578

# RemoveUnnecessaryBackslashQuickFix
QFIX.remove.unnecessary.backslash=\u522a\u9664\u904b\u7b97\u5f0f\u4e2d\u4e0d\u5fc5\u8981\u7684\u53cd\u659c\u69d3

# ConvertDocstringQuickFix
QFIX.convert.single.quoted.docstring=\u5c07docstring\u8f49\u63db\u70ba\u4e09\u91cd\u96d9\u5f15\u865f\u5b57\u4e32\u5f62\u5f0f

#UnresolvedRefTrueFalseQuickFix
QFIX.unresolved.reference.replace.$0=\u53d6\u4ee3\u70ba{0}

#PyDefaultArgumentQuickFix
QFIX.default.argument=\u53d6\u4ee3\u53ef\u8b8a\u7684\u9810\u8a2d\u53c3\u6578

#RemoveArgumentEqualDefaultQuickFix
QFIX.remove.argument.equal.default=\u522a\u9664\u53c3\u6578\u7b49\u65bc\u9810\u8a2d

# ReplaceFunctionWithSetLiteralQuickFix
QFIX.replace.function.set.with.literal=\u7528set literal\u53d6\u4ee3\u51fd\u6578\u8abf\u7528

#DocstringQuickFix
QFIX.docstring.add.$0=\u65b0\u589e\u6587\u4ef6\u5b57\u4e32\u53c3\u6578\u300c{0}\u300d
QFIX.docstring.remove.$0=\u522a\u9664docstring\u53c3\u6578\u300c{0}\u300d
QFIX.docstring.insert.stub=\u63d2\u5165\u6587\u4ef6\u5b57\u4e32

#RemoveDecoratorQuickFix
QFIX.remove.decorator=\u522a\u9664\u88dd\u98fe\u8005

#PyRenameUnresolvedRefQuickFix
QFIX.rename.unresolved.reference=\u91cd\u65b0\u547d\u540d\u53c3\u8003

#PyMoveAttributeToInitQuickFix
QFIX.move.attribute=\u5c07\u5c6c\u6027\u79fb\u52d5\u5230__init__\u65b9\u6cd5

#PyMakeMethodStaticQuickFix
QFIX.NAME.make.static=\u4f7f\u65b9\u6cd5\u975c\u614b

#PyMakeFunctionFromMethodQuickFix
QFIX.NAME.make.function=\u5f9e\u65b9\u6cd5\u505a\u529f\u80fd

#PyMakeFunctionReturnTypeQuickFix
QFIX.NAME.make.$0.return.$1=\u4f7f\u300c{0}\u300d\u8fd4\u56de\u300c{1}\u300d

#PyImplementMethodsQuickFix
QFIX.NAME.implement.methods=\u5be6\u73fe\u62bd\u50cf\u65b9\u6cd5

QFIX.NAME.remove.assignment=\u522a\u9664\u4f5c\u696d

QFIX.NAME.remove.statement=\u522a\u9664\u8a9e\u53e5

QFIX.NAME.update.parameters=\u66f4\u65b0\u53c3\u6578

QFIX.NAME.remove.call=\u522a\u9664\u96fb\u8a71

QFIX.NAME.move.except.up=\u9664\u4e86\u5b50\u53e5\u4ee5\u5916

QFIX.NAME.remove.dict.key=\u522a\u9664\u9019\u500b\u9375

QFIX.NAME.add.specifier=\u65b0\u589e\u683c\u5f0f\u898f\u7bc4\u5b57\u5143

QFIX.NAME.add.exception.base=\u65b0\u589e\u7570\u5e38\u57fa\u985e\u5225

QFIX.NAME.change.signature=\u8b8a\u66f4\u7c3d\u540d
QFIX.change.signature.of=\u8b8a\u66f4{0}\u7684\u7c3d\u540d

QFIX.NAME.remove.argument=\u522a\u9664\u53c3\u6578

QFIX.NAME.remove.parameter=\u522a\u9664\u53c3\u6578

QFIX.NAME.rename.argument=\u91cd\u65b0\u547d\u540d\u53c3\u6578
QFIX.NAME.rename.element=\u91cd\u65b0\u547d\u540d\u5143\u7d20

QFIX.NAME.wrap.in.exception=\u7528\u7570\u5e38\u8abf\u7528\u5305\u88dd

QFIX.NAME.make.list=\u7528\u6e05\u55ae\u53d6\u4ee3\u5143\u7d44

#PyRemoveUnderscoresInNumericLiteralsQuickFix
QFIX.NAME.remove.underscores.in.numeric=\u522a\u9664\u6578\u5b57\u6587\u5b57\u4e2d\u7684\u4e0b\u5283\u7dda

# InstallAndImportQuickFix
QFIX.install.and.import.package=\u5b89\u88dd\u548c\u532f\u5165\u5305
QFIX.NAME.install.and.import.package=\u5b89\u88dd\u4e26\u532f\u5165\u5305\u300c{0}\u300d

# Intentions: INTN
INTN.Family.convert.import.unqualify=\u5c07\u300c\u532f\u5165\u6a21\u7d44\u300d\u8f49\u63db\u70ba\u300c\u5f9e\u6a21\u7d44\u532f\u5165\u300d
INTN.Family.convert.import.qualify=\u5c07\u300c\u5f9e\u6a21\u7d44\u532f\u5165\u300d\u8f49\u63db\u70ba\u300c\u532f\u5165\u6a21\u7d44\u300d
INTN.Family.toggle.import.alias=\u5207\u63db\u532f\u5165\u5225\u540d
INTN.Family.convert.except.part=\u5c07\u90e8\u4efd\u8f49\u63db\u70ba\u652f\u63f4\u7684\u5f62\u5f0f
INTN.Family.convert.set.literal=\u8f49\u63db\u8a2d\u5b9a\u6587\u5b57\u5169\u500b\u652f\u63f4\u7684\u5f62\u5f0f
INTN.Family.convert.builtin=\u8f49\u63db\u5167\u7f6e\u6a21\u7d44\u532f\u5165
INTN.Family.convert.dict.comp.expression=\u8f49\u63db\u5b57\u5178\u7406\u89e3\u8868\u9054
INTN.Family.convert.string=\u5c07\u55ae\u5f15\u865f\u5b57\u4e32\u8f49\u63db\u70ba\u96d9\u5f15\u865f

INTN.convert.to.from.$0.import.$1=\u8f49\u63db\u70ba\u300cfrom {0} import {1}\u300d
INTN.convert.to.import.$0=\u8f49\u63db\u70ba\u300cimport {0}\u300d

INTN.alias.for.$0.dialog.title=\u5225\u540d\u300c{0}\u300d:
INTN.add.alias.for.import.$0=\u5c07\u5225\u540d\u65b0\u589e\u5230\u300c{0}\u300d
INTN.remove.alias.for.import.$0=\u522a\u9664\u5225\u540d\u300c{0}\u300d

INTN.Family.migration.to.python3=\u9077\u79fb\u5230Python 3

INTN.convert.except.to=\u5c07'exceptClass\uff0cTarget'\u9664\u5916\u8f49\u63db\u70ba'exceptClass as Target'

INTN.convert.set.literal.to=\u5c07\u8a2d\u5b9a\u6587\u5b57\u8f49\u63db\u70ba\u300c\u8a2d\u5b9a\u300d\u65b9\u6cd5\u8abf\u7528

INTN.convert.builtin.import=\u5c07\u5167\u7f6e\u6a21\u7d44\u532f\u5165\u8f49\u63db\u70ba\u652f\u63f4\u7684\u5f62\u5f0f

INTN.convert.dict.comp.to=\u5c07\u5b57\u5178\u7406\u89e3\u8f49\u63db\u70ba\u300c\u5b57\u5178\u300d\u65b9\u6cd5\u8abf\u7528

INTN.replace.noteq.operator=\u66f4\u63db\u4e0d\u76f8\u7b49\u7684\u64cd\u4f5c\u54e1

INTN.remove.leading.$0=\u522a\u9664\u524d\u5c0e{0}
INTN.remove.leading.prefix=\u522a\u9664\u524d\u7f6e\u5b57\u5143

INTN.remove.trailing.l=\u522a\u9664\u5f8c\u9762\u7684L

INTN.replace.list.comprehensions=\u5c07\u6e05\u55ae\u63a8\u5c0e\u8f49\u63db\u70ba\u652f\u63f4\u7684\u5f62\u5f0f

INTN.replace.list.comprehensions.with.for=\u5c07\u6e05\u55ae\u63a8\u5c0e\u8f49\u63db\u70bafor\u5faa\u74b0

INTN.replace.octal.numeric.literal=\u5c07\u516b\u9032\u4f4d\u6578\u5b57\u6587\u5b57\u8f49\u63db\u70ba\u652f\u63f4\u7684\u5f62\u5f0f

INTN.replace.raise.statement=\u5c07raise\u8a9e\u53e5\u8f49\u63db\u70ba\u53d7\u652f\u63f4\u7684\u8868\u55ae

INTN.replace.backquote.expression=\u53d6\u4ee3\u53cd\u5f15\u865f\u904b\u7b97\u5f0f

INTN.replace.method=\u53d6\u4ee3\u76ee\u524dPython\u7248\u672c\u4e0d\u652f\u63f4\u7684\u65b9\u6cd5

INTN.split.if=\u5206\u5272\u5982\u679c
INTN.split.if.text=\u5982\u679c\u5206\u62102\u500b

INTN.negate.comparison=\u5426\u5b9a\u6bd4\u8f03
INTN.negate.$0.to.$1=\u5c07\u300c{0}\u300d\u53d6\u4ee3\u70ba\u300c{1}\u300d

INTN.string.concatenation.to.format=\u7528\u683c\u5f0f\u904b\u7b97\u5b50\u53d6\u4ee3\u5b57\u4e32\u9023\u63a5
INTN.replace.plus.with.format.operator=\u7528\u5b57\u4e32\u683c\u5f0f\u5316\u904b\u7b97\u5b50\u53d6\u4ee3
INTN.replace.plus.with.str.format=\u7528str.format\u65b9\u6cd5\u8abf\u7528\u53d6\u4ee3

# ConvertFormatOperatorToMethodIntention
INTN.format.operator.to.method=\u5c07\u683c\u5f0f\u904b\u7b97\u5b50\u7528\u6cd5\u8f49\u63db\u70bastr.format\u65b9\u6cd5\u8abf\u7528

# PyConvertToFStringIntention
INTN.convert.to.fstring.literal=\u8f49\u63db\u70baf-string\u6587\u5b57
INTN.replace.with.method=\u7528str.format\u65b9\u6cd5\u8abf\u7528\u53d6\u4ee3

INTN.flip.comparison=\u7ffb\u8f49\u6bd4\u8f03
INTN.flip.$0=\u7ffb\u8f49\u300c{0}\u300d
INTN.flip.$0.to.$1=\u7ffb\u8f49\u300c{0}\u300d\u5230\u300c{1}\u300d

INTN.convert.string=\u5c07\u55ae\u5f15\u865f\u5b57\u4e32\u8f49\u63db\u70ba\u96d9\u5f15\u865f

INTN.join.if=\u52a0\u5165\u5982\u679c\u662f
INTN.join.if.text=\u52a0\u5165\u5169\u500b\u5982\u679c\u662f

INTN.convert.dict.constructor.to.dict.literal=\u8f49\u63db\u5b57\u5178\u69cb\u9020\u51fd\u6578\u70ba\u5b57\u9762\u7684\u5f62\u5f0f
INTN.convert.dict.literal.to.dict.constructor=\u8f49\u63db\u5b57\u5178\u70ba\u5b57\u5178\u69cb\u9020

INTN.quoted.string=\u5728\u55ae\u5f15\u865f\u548c\u96d9\u5f15\u865f\u5b57\u4e32\u4e4b\u9593\u8f49\u63db
INTN.quoted.string.single.to.double=\u5c07\u55ae\u5f15\u865f\u5b57\u4e32\u8f49\u63db\u70ba\u96d9\u5f15\u865f\u5b57\u4e32
INTN.quoted.string.double.to.single=\u5c07\u96d9\u5f15\u865f\u5b57\u4e32\u8f49\u63db\u70ba\u55ae\u5f15\u865f\u5b57\u4e32

INTN.convert.lambda.to.function=\u5c07lambda\u8f49\u63db\u70ba\u51fd\u6578

INTN.convert.variadic.param=\u5f9e\u53ef\u8b8a\u53c3\u6578\u8f49\u63db\u70ba\u5e38\u898f\u53c3\u6578(s\uff09

# PyConvertTripleQuotedStringIntention
INTN.triple.quoted.string=\u5c07\u4e09\u91cd\u5f15\u865f\u5b57\u4e32\u8f49\u63db\u70ba\u55ae\u5f15\u865f\u5b57\u4e32

# PyBaseConvertCollectionLiteralIntention
INTN.convert.collection.literal.family=\u5c07\u6536\u85cf\u96c6\u8f49\u63db\u70ba{0}
INTN.convert.collection.literal.text=\u5c07{0}\u8f49\u63db\u70ba{1}

# PyConvertTypeCommentToVariableAnnotation
INTN.convert.type.comment.to.variable.annotation.family=\u5c07\u985e\u578b\u8a3b\u89e3\u8f49\u63db\u70ba\u8b8a\u6578\u8a3b\u89e3
INTN.convert.type.comment.to.variable.annotation.text=\u8f49\u63db\u70ba\u8b8a\u6578\u8a3b\u89e3


INTN.demorgan.law=\u5fb7\u6469\u6839\u6cd5\u5f8b

# PyTransformConditionalExpressionIntention
INTN.transform.into.if.else.statement=\u5c07\u689d\u4ef6\u904b\u7b97\u5f0f\u8f49\u63db\u70baif / else\u8a9e\u53e5

# PyConvertTripleQuotedStringIntention
INTN.doc.string.stub=\u63d2\u5165\u6587\u4ef6\u5b57\u4e32\u5b58\u6839

#SpecifyTypeInDocstringIntention
INTN.specify.type=\u5728\u6587\u4ef6\u5b57\u4e32\u4e2d\u6307\u5b9a\u985e\u578b\u4ee5\u4f9b\u53c3\u8003
INTN.specify.return.type=\u5728\u6587\u4ef6\u5b57\u4e32\u4e2d\u6307\u5b9a\u8fd4\u56de\u985e\u578b
INTN.add.parameters.to.docstring=\u5c07\u53c3\u6578\u65b0\u589e\u5230docstring

#SpecifyTypeInPy3AnnotationsIntention
INTN.specify.type.in.annotation=\u4f7f\u7528\u8a3b\u89e3\u6307\u5b9a\u985e\u578b\u4ee5\u4f9b\u53c3\u8003
INTN.specify.return.type.in.annotation=\u4f7f\u7528\u8a3b\u89e3\u6307\u5b9a\u8fd4\u56de\u985e\u578b

#PyAnnotateTypesIntention/PyAnnotateVariableTypeIntention
INTN.add.type.hints.for.function.family=Add type hints for function
INTN.add.type.hints.for.function=Add type hints for function ''{0}''
INTN.add.type.hint.for.variable.family=Add type hint for variable
INTN.add.type.hint.for.variable=Add type hint for variable ''{0}''
INTN.add.type.hint.for.variable.PEP484.incompatible.type=Type ''{0}'' cannot be expressed inline in PEP 484 format

#TypeAssertionIntention
INTN.insert.assertion=\u63d2\u5165\u985e\u578b\u65b7\u8a00

#PyYieldFromIntention
INTN.yield.from=\u5c07\u300cyield\u300d\u986f\u5f0f\u8fed\u4ee3\u8f49\u63db\u70ba\u300cyield from\u300d\u904b\u7b97\u5f0f

#PyConvertStaticMethodToFunctionIntention
INTN.convert.static.method.to.function=\u5c07\u975c\u614b\u65b9\u6cd5\u8f49\u63db\u70ba\u51fd\u6578

#PyConvertMethodToPropertyIntention
INTN.convert.method.to.property=\u5c07\u65b9\u6cd5\u8f49\u63db\u70ba\u5c6c\u6027

# Conflict checker
CONFLICT.name.$0.obscured=\u540d\u7a31\u300c{0}\u300d\u88ab\u672c\u6a5f\u5b9a\u7fa9\u906e\u853d
CONFLICT.name.$0.obscured.cannot.convert=\u540d\u7a31\u300c{0}\u300d\u88ab\u906e\u84cb\u3002\u7121\u6cd5\u8f49\u63db\u3002
CONFLICT.occurrence.sing=\u767c\u751f
CONFLICT.occurrence.pl=\u4e8b\u4ef6

### Surround with templates ###
surround.with.whileelse.template=while / else
surround.with.return.template=\u8fd4\u56de
surround.with.try.except.template=\u5617\u8a66/\u9664\u4e86

##########################################################################################################################
# Unwrap
##########################################################################################################################
unwrap.if=\u5982\u679c...\u89e3\u5305...
unwrap.while=\u89e3\u958b...
unwrap.for=\u958b\u555f...
unwrap.with=\u958b\u555f...
unwrap.try=\u958b\u555f\u8a66\u8a66...
unwrap.else=\u958b\u555f\u5225\u7684...
unwrap.elif=\u89e3\u5305elif...
remove.else=\u522a\u9664\u5176\u4ed6...
remove.elif=\u522a\u9664elif...

### Inspections: INSP ###
INSP.GROUP.python=\u87d2\u86c7
INSP.GROUP.mako=\u771f\u5b50

# PyArgumentListInspection
INSP.NAME.incorrect.call.arguments=\u8abf\u7528\u53c3\u6578\u4e0d\u6b63\u78ba
INSP.cannot.appear.past.keyword.arg=\u4e0d\u80fd\u51fa\u73fe\u5728\u95dc\u9375\u5b57\u53c3\u6578\u6216* arg\u6216** kwarg\u4e4b\u5f8c
INSP.unexpected.arg=\u610f\u5916\u7684\u8aaa\u6cd5
INSP.unexpected.arg(s)=\u610f\u5916\u7684\u8ad6\u64da
INSP.parameter.$0.unfilled=\u53c3\u6578\u300c{0}\u300d\u672a\u586b\u5145
INSP.parameter(s).unfilled=\u53c3\u6578\u672a\u586b\u5145
INSP.possible.callees=\u53ef\u80fd\u7684\u88ab\u8abf\u7528\u8005
INSP.func.$0.lacks.first.arg=\u51fd\u6578\u300c{0}\u300d\u7f3a\u5c11\u4f4d\u7f6e\u53c3\u6578
INSP.expected.dict.got.$0=\u9810\u671f\u5b57\u5178\uff0c\u5f97\u5230{0}
INSP.expected.iter.got.$0=\u9810\u671f\u4e00\u500b\u8fed\u4ee3\uff0c\u5f97\u5230{0}
INSP.more.args.that.pos.params=\u591a\u500b\u503c\u5256\u6790\u70ba\u4e00\u500b\u4f4d\u7f6e\u53c3\u6578
INSP.multiple.values.resolve.to.positional.$0=\u591a\u500b\u503c\u5256\u6790\u70ba\u4f4d\u7f6e\u53c3\u6578\u300c{0}\u300d
INSP.cannot.analyze=\u9019\u500b\u53c3\u6578\u6e05\u55ae\u4e0d\u80fd\u88ab\u5206\u6790

# PyMethodParametersInspection
INSP.NAME.problematic.first.parameter=\u7b2c\u4e00\u500b\u53c3\u6578\u6709\u9ebb\u7169\u7684\u65b9\u6cd5
INSP.must.have.first.parameter=\u65b9\u6cd5\u5fc5\u9808\u5177\u6709\u7b2c\u4e00\u500b\u53c3\u6578\uff0c\u901a\u5e38\u7a31\u70ba\u300c{0}\u300d
INSP.probably.mistyped.self=\u4f60\u4e0d\u662f\u6307\u300c\u81ea\u6211\u300d\u55ce\uff1f
INSP.usually.named.self=\u901a\u5e38\u4e00\u500b\u65b9\u6cd5\u7684\u7b2c\u4e00\u500b\u53c3\u6578\u88ab\u547d\u540d\u70ba\u300cself\u300d
INSP.usually.named.$0=\u901a\u5e38\u9019\u7a2e\u65b9\u6cd5\u7684\u7b2c\u4e00\u500b\u53c3\u6578\u88ab\u547d\u540d\u70ba\u300c{0}\u300d
INSP.first.param.must.not.be.tuple=\u975e\u975c\u614b\u65b9\u6cd5\u7684\u7b2c\u4e00\u500b\u53c3\u6578\u4e0d\u80fd\u662f\u5143\u7d44

# PyNestedDecoratorsInspection
INSP.NAME.nested.decorators=\u4fee\u98fe\u5668\u6709\u554f\u984c\u7684\u5de2\u72c0
INSP.decorator.receives.unexpected.builtin=\u9019\u500b\u88dd\u98fe\u5668\u4e0d\u6703\u6536\u5230\u5b83\u53ef\u80fd\u671f\u671b\u7684\u53ef\u8abf\u7528\u7684;\u5167\u7f6e\u7684\u88dd\u98fe\u5668\u8fd4\u56de\u4e00\u500b\u7279\u6b8a\u7684\u7269\u4ef6

# PyRedeclarationInspection
INSP.NAME.redeclaration=\u91cd\u65b0\u7533\u5831\u7684\u540d\u7a31\u6c92\u6709\u4f7f\u7528
INSP.redeclared.name=\u4e0a\u9762\u5b9a\u7fa9\u7684\u300c{0}\u300d\u6c92\u6709\u4f7f\u7528

# PyUnresolvedReferencesInspection
INSP.NAME.unresolved.refs=\u672a\u89e3\u6c7a\u7684\u53c3\u8003
INSP.module.$0.not.found=\u672a\u627e\u5230\u6a21\u7d44\u300c{0}\u300d
INSP.unresolved.ref.$0=\u672a\u89e3\u6c7a\u7684\u53c3\u8003\u300c{0}\u300d
INSP.unresolved.ref.$0.for.class.$1=\u985e\u5225\u300c{1}\u300d\u7684\u672a\u5256\u6790\u5c6c\u6027\u53c3\u7167\u300c{0}\u300d
INSP.cannot.find.$0.in.$1=\u5728\u300c{1}\u300d\u4e2d\u627e\u4e0d\u5230\u53c3\u7167\u300c{0}\u300d
INSP.try.except.import.error=\u300c\u9664\u4e86ImportError\u5916\u300d\u7684try\u5340\u584a\u4e2d\u7684 ''{0}'' \u4e5f\u61c9\u5728except\u5340\u584a\u4e2d\u5b9a\u7fa9
INSP.unresolved.operator.ref=\u985e\u5225\u300c{0}\u300d\u6c92\u6709\u5b9a\u7fa9\u300c{1}\u300d\uff0c\u56e0\u6b64\u4e0d\u80fd\u5728\u5176\u5be6\u4f8b\u4e0a\u4f7f\u7528\u300c{2}\u300d\u904b\u7b97\u5b50

# PyInterpreterInspection
INSP.NAME.invalid.interpreter=\u8a2d\u5b9a\u7684\u89e3\u91cb\u5668\u7121\u6548

# ReturnValueFromInitInspection
INSP.NAME.init.return=__init__\u65b9\u6cd5\u8fd4\u56de\u4e00\u500b\u503c
INSP.cant.return.value.from.init=\u7121\u6cd5\u5f9e__init__\u8fd4\u56de\u503c

# PyUnreachableCodeInspection
INSP.NAME.unreachable.code=\u7121\u6cd5\u5b58\u53d6\u7684\u4ee3\u78bc
INSP.unreachable.code=\u6b64\u4ee3\u78bc\u7121\u6cd5\u5b58\u53d6

# PyMethodFirstArgAssignmentInspection
INSP.NAME.first.arg.assign=\u91cd\u65b0\u5206\u914d\u65b9\u6cd5\u7684\u7b2c\u4e00\u500b\u53c3\u6578
INSP.first.arg.$0.assigned=\u65b9\u6cd5\u7684\u53c3\u6578\u300c{0}\u300d\u91cd\u65b0\u5206\u914d

# PyStringFormatInspection
INSP.NAME.str.format=\u5b57\u4e32\u683c\u5f0f\u5316\u64cd\u4f5c\u4e2d\u7684\u932f\u8aa4
INSP.format.requires.no.mapping=\u683c\u5f0f\u4e0d\u9700\u8981\u6620\u5c04
INSP.key.$0.has.no.arg=\u9375\u300c{0}\u300d\u6c92\u6709\u5c0d\u61c9\u7684\u53c3\u6578
INSP.unexpected.type.$0=\u610f\u5916\u7684\u985e\u578b{0}
INSP.too.few.keys=\u6620\u5c04\u5bc6\u9470\u592a\u5c11
INSP.no.format.specifier.char=\u683c\u5f0f\u898f\u7bc4\u5b57\u5143\u907a\u5931
INSP.format.requires.mapping=\u683c\u5f0f\u9700\u8981\u6620\u5c04
INSP.too.many.args.for.fmt.string=\u683c\u5f0f\u5b57\u4e32\u7684\u53c3\u6578\u592a\u591a
INSP.too.few.args.for.fmt.string=\u683c\u5f0f\u5b57\u4e32\u7684\u53c3\u6578\u592a\u5c11
INSP.incompatible.options=\u5340\u584a\u300c{0}\u300d\u4e2d\u7684\u683c\u5f0f\u9078\u9805\u4e0d\u76f8\u5bb9
INSP.unused.mapping = \u6620\u5c04\u9375\u300c{0}\u300d\u672a\u4f7f\u7528
INSP.unsupported.format.character=\u4e0d\u652f\u63f4\u7684\u683c\u5f0f\u5b57\u5143\u300c{0}\u300d
INSP.manual.to.auto.field.numbering=Cannot switch from manual field specification to automatic field numbering
INSP.auto.to.manual.field.numbering=Cannot switch from automatic field numbering to manual field specification

# PyMethodOverridingInspection
INSP.NAME.method.over=\u65b9\u6cd5\u7c3d\u540d\u8207\u91cd\u5beb\u65b9\u6cd5\u7684\u7c3d\u540d\u4e0d\u7b26\u5408
INSP.signature.mismatch=\u65b9\u6cd5\u300c{0}\u300d\u7684\u7c3d\u540d\u8207\u985e\u5225\u300c{1}\u300d\u4e2d\u57fa\u65b9\u6cd5\u7684\u7c3d\u540d\u4e0d\u7b26\u5408

# PyInitNewSignatureInspection
INSP.NAME.new.init.signature=__new__\u548c__init__\u7684\u4e0d\u76f8\u5bb9\u7c3d\u540d
INSP.new.incompatible.to.init=\u7c3d\u540d\u8207__init__\u4e0d\u76f8\u5bb9
INSP.init.incompatible.to.new=\u7c3d\u540d\u8207__new__\u4e0d\u76f8\u5bb9

# PyTrailingSemicolonInspection
INSP.NAME.trailing.semicolon=\u5728\u8a9e\u53e5\u4e2d\u62d6\u5c3e\u5206\u865f

# PyUnusedLocalInspection
INSP.NAME.unused=\u672a\u4f7f\u7528\u7684\u672c\u6a5f
INSP.unused.locals.parameter.isnot.used=\u4e0d\u4f7f\u7528\u53c3\u6578\u300c{0}\u300d\u7684\u503c
INSP.unused.locals.local.variable.isnot.used=\u5c40\u90e8\u8b8a\u6578\u300c{0}\u300d\u7684\u503c\u4e0d\u88ab\u4f7f\u7528
INSP.unused.locals.replace.with.wildcard=\u7528_\u4f86\u4ee3\u66ff
INSP.unused.locals.local.function.isnot.used=\u672c\u6a5f\u51fd\u6578\u300c{0}\u300d\u4e0d\u88ab\u4f7f\u7528
INSP.unused.locals.local.class.isnot.used=\u6c92\u6709\u4f7f\u7528\u672c\u6a5f\u985e\u5225\u300c{0}\u300d

# PyUnboundLocalVariableInspection
INSP.NAME.unbound=\u672a\u7d81\u5b9a\u7684\u5c40\u90e8\u8b8a\u6578
INSP.unbound.local.variable=\u5c40\u90e8\u8b8a\u6578\u300c{0}\u300d\u53ef\u80fd\u5728\u8ce6\u503c\u4e4b\u524d\u88ab\u53c3\u7167
INSP.unbound.nonlocal.variable=\u975e\u5c40\u90e8\u8b8a\u6578\u300c{0}\u300d\u5fc5\u9808\u7d81\u5b9a\u5728\u5916\u90e8\u51fd\u6578\u7bc4\u570d\u5167
INSP.unbound.name.not.defined=\u540d\u7a31\u300c{0}\u300d\u53ef\u4ee5\u4e0d\u5b9a\u7fa9
INSP.unbound.function.too.large=\u51fd\u6578\u300c{0}\u300d\u592a\u5927\u800c\u7121\u6cd5\u5206\u6790

# PyDictCreationInspection
INSP.NAME.dict.creation=\u5b57\u5178\u5efa\u7acb\u53ef\u4ee5\u900f\u904e\u5b57\u5178\u6587\u5b57\u91cd\u5beb

# PyListCreationInspection
INSP.NAME.list.creation=\u6e05\u55ae\u5efa\u7acb\u53ef\u4ee5\u900f\u904e\u6e05\u55ae\u6587\u5b57\u91cd\u5beb

# PyExceptClausesOrderInspection
INSP.NAME.bad.except.clauses.order=\u9664\u4e86\u5b50\u53e5\u9806\u5e8f\u4ee5\u5916
INSP.class.$0.already.caught=\u7570\u5e38\u985e\u5225\u300c{0}\u300d\u5df2\u88ab\u6355\u7372
INSP.class.$0.superclass.$1.already.caught=''{0}''\uff0c\u7570\u5e38\u985e\u5225 ''{1}'' \u7684\u8d85\u985e\u5225\u5df2\u7d93\u88ab\u6355\u7372

# PyTupleAssignmentBalanceInspection
INSP.NAME.incorrect.assignment=\u5143\u7d44\u5206\u914d\u5e73\u8861\u4e0d\u6b63\u78ba

# PyClassicStyleClassInspection
INSP.NAME.classic.class.usage=\u7d93\u5178\u98a8\u683c\u985e\u5225\u7684\u7528\u6cd5
INSP.classic.class.usage.old.style.class=\u8001\u5f0f\u8ab2\u5802
INSP.classic.class.usage.old.style.class.ancestors=\u820a\u5f0f\u7684\u8ab2\u7a0b\uff0c\u56e0\u70ba\u5b83\u6240\u7e7c\u627f\u7684\u6240\u6709\u8ab2\u7a0b\u90fd\u662f\u820a\u5f0f\u8ab2\u7a0b


# PyExceptionInheritance
INSP.NAME.exception.not.inherit=\u7570\u5e38\u4e0d\u6703\u5f9e\u6a19\u6e96\u7684\u300cException\u300d\u985e\u5225\u7e7c\u627f

# PyDefaultArgumentInspection
INSP.NAME.default.argument=\u9810\u8a2d\u53c3\u6578\u662f\u53ef\u8b8a\u7684

# PyIncorrectDocstringInspection
INSP.NAME.incorrect.docstring=\u4e0d\u6b63\u78ba\u7684\u6587\u4ef6\u5b57\u4e32
INSP.missing.parameter.in.docstring=\u6587\u4ef6\u5b57\u4e32\u4e2d\u7f3a\u5c11\u53c3\u6578{0}
INSP.unexpected.parameter.in.docstring=\u6587\u4ef6\u5b57\u4e32\u4e2d\u7684\u610f\u5916\u53c3\u6578{0}

# PyMissingOrEmptyDocstringInspection
INSP.NAME.missing.or.empty.docstring=\u7f3a\u5c11\u6216\u7a7a\u6587\u4ef6\u5b57\u4e32
INSP.no.docstring=\u7f3a\u5c11\u6587\u4ef6\u5b57\u4e32
INSP.empty.docstring=\u7a7a\u7684\u6587\u4ef6\u5b57\u4e32

# PyDocstringTypesInspection
INSP.NAME.docstring.types=\u8f38\u5165\u6587\u4ef6\u5b57\u4e32\u8207\u63a8\u65b7\u7684\u985e\u578b\u4e0d\u7b26\u5408

# PyStatementEffectInspection
INSP.NAME.statement.effect=\u5ba3\u544a\u4e0d\u8d77\u4f5c\u7528
INSP.NAME.statement.message=\u5ba3\u544a\u4f3c\u4e4e\u6c92\u6709\u6548\u679c

# PySimplifyBooleanCheckInspection
INSP.NAME.check.can.be.simplified=\u5e03\u6797\u8b8a\u6578\u6aa2\u67e5\u53ef\u4ee5\u7c21\u5316
INSP.expression.can.be.simplified=\u8868\u9054\u53ef\u4ee5\u7c21\u5316

# PyFromFutureImportInspection
INSP.NAME.from.future.import=\u5f9e__future__\u532f\u5165\u5fc5\u9808\u662f\u7b2c\u4e00\u500b\u53ef\u57f7\u884c\u8a9e\u53e5

# PyComparisonWithNoneInspection
INSP.NAME.comparison.with.none=\u6c92\u6709\u8207\u5e73\u7b49\u904b\u71df\u5546\u9032\u884c\u6bd4\u8f03

# PyStringExceptionInspection
INSP.NAME.raising.string.exception=\u5f15\u767c\u5b57\u4e32\u7570\u5e38

# PySuperArgumentsInspection
INSP.NAME.wrong.super.arguments=\u932f\u8aa4\u7684\u53c3\u6578\u4f86\u8abf\u7528\u8d85\u7d1a
INSP.$0.is.not.superclass.of.$1=''{0}''\u4e0d\u662f''{1}''\u7684\u5be6\u4f8b\u6216\u5b50\u985e\u5225

# PyByteLiteralInspection
INSP.NAME.byte.literal=\u4f4d\u5143\u7d44\u6587\u5b57\u5305\u542b\u5927\u65bc255\u7684\u5b57\u5143

# PynonAsciiCharInspection
INSP.NAME.non.ascii=\u6a94\u6848\u5305\u542b\u975eASCII\u5b57\u5143

# PyMandatoryEncodingInspection
INSP.NAME.mandatory.encoding=\u6c92\u6709\u70ba\u6a94\u6848\u6307\u5b9a\u7de8\u78bc

# PyTupleItemAssignmentInspection
INSP.NAME.tuple.item.assignment=\u5143\u7d44\u9805\u76ee\u5206\u914d
INSP.tuples.never.assign.items=\u5143\u7d44\u4e0d\u652f\u63f4\u9805\u76ee\u5206\u914d

# PyPropertyAccessInspection
INSP.NAME.property.access=\u5b58\u53d6\u5c6c\u6027
INSP.property.$0.cant.be.set=\u5c6c\u6027\u300c{0}\u300d\u7121\u6cd5\u8a2d\u5b9a
INSP.property.$0.cant.be.read=\u5c6c\u6027\u300c{0}\u300d\u7121\u6cd5\u8b80\u53d6
INSP.property.$0.cant.be.deleted=\u5c6c\u6027\u300c{0}\u300d\u7121\u6cd5\u522a\u9664

# PyPropertyDefinitionInspection
INSP.NAME.property.definition=\u5c6c\u6027\u5b9a\u7fa9
INSP.doc.param.should.be.str=doc\u53c3\u6578\u61c9\u8a72\u662f\u4e00\u500b\u5b57\u4e32
INSP.strange.arg.want.callable=\u5947\u602a\u7684\u8aaa\u6cd5;\u9810\u8a08\u53ef\u8abf\u7528
INSP.func.property.name.mismatch=\u51fd\u6578\u548c\u88dd\u98fe\u5668\u540d\u7a31\u4e0d\u7b26\u5408;\u5c6c\u6027\u5b58\u53d6\u5668\u4e0d\u88ab\u5efa\u7acb
INSP.getter.return.smth=Getter\u61c9\u8a72\u8fd4\u56de\u6216\u7522\u751f\u4e00\u4e9b\u6771\u897f
INSP.setter.should.not.return=Setter\u4e0d\u61c9\u8a72\u8fd4\u56de\u4e00\u500b\u503c
INSP.deleter.should.not.return=Deleter\u4e0d\u61c9\u8a72\u8fd4\u56de\u4e00\u500b\u503c
INSP.getter.signature.advice=Getter\u7c3d\u540d\u61c9\u8a72\u662f(self\uff09
INSP.setter.signature.advice=\u4e8c\u50b3\u624b\u7c3d\u540d\u61c9\u8a72\u662f(\u81ea\u6211\uff0c\u50f9\u503c\uff09
INSP.deleter.signature.advice=\u522a\u9664\u8005\u7c3d\u540d\u61c9\u8a72\u662f(self\uff09
INSP.accessor.first.param.is.$0=\u5b58\u53d6\u8005\u7684\u7b2c\u4e00\u500b\u53c3\u6578\u901a\u5e38\u88ab\u7a31\u70ba\u300c{0}\u300d

# PyCallByClassInspection
INSP.NAME.different.class.call=\u4f7f\u7528\u4e0d\u540c\u985e\u5225\u7684\u5be6\u4f8b\u6309\u985e\u5225\u8abf\u7528\u65b9\u6cd5
INSP.instance.of.$0.excpected=\u671f\u671b{0}\u7684\u5be6\u4f8b\uff0c\u800c\u4e0d\u662f\u985e\u5225\u672c\u8eab
INSP.passing.$0.instead.of.$1=\u50b3\u905e{0}\u800c\u4e0d\u662f{1}\u3002\u9019\u662f\u6545\u610f\u7684\u55ce\uff1f

# PyBroadExceptionInspection
INSP.NAME.too.broad.exception.clauses=\u904e\u65bc\u5bec\u6cdb\u7684\u4f8b\u5916\u689d\u6b3e

# PyDictDuplicateKeysInspection
INSP.NAME.duplicate.keys=\u5b57\u5178\u5305\u542b\u91cd\u8907\u7684\u9375

# PyRedundantParenthesesInspection
INSP.NAME.redundant.parentheses=\u5099\u63f4\u7684\u62ec\u865f

# PyAugmentAssignmentInspection
INSP.NAME.augment.assignment=\u5206\u914d\u53ef\u4ee5\u7528\u64f4\u5145\u5206\u914d\u4f86\u4ee3\u66ff

# PyChainedComparsonsInspection
INSP.NAME.chained.comparisons=\u9023\u7d50\u6bd4\u8f03\u53ef\u4ee5\u7c21\u5316

# PyAttributeOutsideInitInspection
INSP.NAME.attribute.outside.init=\u5728__init__\u4e4b\u5916\u5b9a\u7fa9\u7684\u5be6\u4f8b\u5c6c\u6027
INSP.attribute.$0.outside.init=\u5728__init__\u4e4b\u5916\u5b9a\u7fa9\u7684\u5be6\u4f8b\u5c6c\u6027{0}

# PyProtectedMemberInspection
INSP.protected.member.$0.access=\u5b58\u53d6\u53d7\u4fdd\u8b77\u7684\u6210\u54e1{0}\u7684\u985e\u5225
INSP.protected.member.$0.access.module=\u5b58\u53d6\u6a21\u7d44\u7684\u53d7\u4fdd\u8b77\u6210\u54e1{0}

# PyArgumentEqualDefaultInspection
INSP.NAME.argument.equal.default=\u50b3\u905e\u7d66\u51fd\u6578\u7684\u53c3\u6578\u7b49\u65bc\u9810\u8a2d\u53c3\u6578\u503c
INSP.argument.equals.to.default=\u53c3\u6578\u7b49\u65bc\u9810\u8a2d\u53c3\u6578\u503c

# PyAbstractClassInspection
INSP.NAME.abstract.class=\u985e\u5225\u5fc5\u9808\u5be6\u73fe\u6240\u6709\u7684\u62bd\u50cf\u65b9\u6cd5
INSP.NAME.abstract.class.$0.must.implement=\u985e\u5225{0}\u5fc5\u9808\u5be6\u73fe\u6240\u6709\u7684\u62bd\u50cf\u65b9\u6cd5

# PyOldStyleClassesInspection
INSP.NAME.oldstyle.class=\u820a\u5f0f\u73ed\u7d1a\u5305\u542b\u65b0\u5f0f\u73ed\u7d1a\u7279\u5fb5
INSP.oldstyle.class.slots=\u820a\u5f0f\u985e\u5225\u5305\u542b__slots__\u5b9a\u7fa9
INSP.oldstyle.class.getattribute=\u820a\u5f0f\u985e\u5225\u5305\u542b__getattribute__\u5b9a\u7fa9
INSP.oldstyle.class.super=\u820a\u5f0f\u7684\u985e\u5225\u5305\u542b\u8d85\u7d1a\u65b9\u6cd5\u7684\u8abf\u7528

# PyCompatibilityInspection
INSP.NAME.compatibility=\u4ee3\u78bc\u76f8\u5bb9\u6027\u6aa2\u67e5

# PyUnnecessaryBackslashInspection
INSP.NAME.unnecessary.backslash=\u4e0d\u5fc5\u8981\u7684\u53cd\u659c\u69d3

# PySingleQuotedDocstringInspection
INSP.NAME.single.quoted.docstring=\u55ae\u5f15\u865f\u6587\u4ef6\u5b57\u4e32
INSP.message.single.quoted.docstring=\u4e09\u91cd\u96d9\u5f15\u865f\u7684\u5b57\u4e32\u61c9\u8a72\u7528\u65bcdocstrings\u3002

# PyMissingConstructorInspection
INSP.NAME.missing.super.constructor=\u932f\u904e\u4e86\u5c0d\u8d85\u985e\u5225\u7684__init__\u7684\u8abf\u7528
INSP.missing.super.constructor.message=\u8abf\u7528\u8d85\u985e\u5225\u7684__init__\u662f\u932f\u904e\u7684

# PySetFunctionToLiteralInspection
INSP.NAME.set.function.to.literal=\u51fd\u6578\u8abf\u7528\u53ef\u4ee5\u7528set literal\u4f86\u53d6\u4ee3

# PyDecoratorInspection
INSP.NAME.decorator.outside.class=\u985e\u5225\u5916\u90e8\u65b9\u6cd5\u7684\u985e\u5225\u7279\u5b9a\u88dd\u98fe\u5668

# PyPackageRequirementsInspection
INSP.NAME.requirements=\u5305\u88dd\u8981\u6c42

# PyMethodMayBeStaticInspection
INSP.NAME.method.may.be.static=\u65b9\u6cd5\u53ef\u80fd\u662f\u975c\u614b\u7684
INSP.method.may.be.static=\u65b9\u6cd5<code> #ref </code>\u53ef\u80fd\u662f'static'

# PyClassHasNoInitInspection
INSP.NAME.class.has.no.init=\u985e\u5225\u6c92\u6709__init__\u65b9\u6cd5
INSP.class.has.no.init=\u985e\u5225\u6c92\u6709__init__\u65b9\u6cd5
INSP.parent.$0.has.no.init=\u7236\u9805\u300c{0}\u300d\u6c92\u6709__init__\u65b9\u6cd5

#PyNoneFunctionAssignmentInspection
INSP.NAME.none.function.assignment=\u6307\u5b9a\u4e0d\u8fd4\u56de\u4efb\u4f55\u6771\u897f\u7684\u51fd\u6578\u8abf\u7528(\u7121\uff09
INSP.none.function.assignment=\u51fd\u6578\u300c{0}\u300d\u4e0d\u8fd4\u56de\u4efb\u4f55\u5167\u5bb9

#PyGlobalUndefinedInspection
INSP.NAME.global.undefined=\u5168\u5c40\u8b8a\u6578\u5728\u6a21\u7d44\u7d1a\u5225\u662f\u672a\u5b9a\u7fa9\u7684
INSP.NAME.global.$0.undefined=\u5168\u5c40\u8b8a\u6578\u300c{0}\u300d\u5728\u6a21\u7d44\u7d1a\u5225\u662f\u672a\u5b9a\u7fa9\u7684

#PyAssignmentToLoopOrWithParameterInspection
INSP.NAME.assignment.to.loop.or.with.parameter.display.name=\u8ce6\u503c\u7d66'for'\u5faa\u74b0\u6216'with'\u8a9e\u53e5\u53c3\u6578
INSP.NAME.assignment.to.loop.or.with.parameter.display.message=\u5df2\u5728''\u4e2d\u70ba''\u5faa\u74b0\u6216''\u7528''\u8a9e\u53e5\u5728\u4e0a\u9762\u5ba3\u544a\u4e86\u8b8a\u6578\u300c{0}\u300d

#PyAsyncCallInspection
INSP.NAME.coroutine.is.not.awaited=Coroutine ''{0}'' is not awaited

# PyTestParametrizedInspection
INSP.NAME.pytest-parametrized=Checks that functions decorated by pytest parametrize have correct arguments

# Refactoring
refactoring.will.not.be.accessible=\u6210\u54e1\uff0c\u60a8\u5617\u8a66\u79fb\u52d5\u53d6\u6c7a\u65bc\u300c{0}\u300d\uff0c\u5728\u91cd\u69cb\u5f8c\u5c07\u7121\u6cd5\u5b58\u53d6
refactoring.error.file.exists=\u6a94\u6848\u300c{0}\u300d\u5df2\u7d93\u5b58\u5728
refactoring.error.directory.exists=\u76ee\u9304\u300c{0}\u300d\u5df2\u7d93\u5b58\u5728

# introduce
refactoring.introduce.name.error=\u540d\u5b57\u4e0d\u6b63\u78ba
refactoring.introduce.selection.error=\u7121\u6cd5\u4f7f\u7528\u6240\u9078\u5143\u7d20\u57f7\u884c\u91cd\u69cb

# introduce variable
refactoring.introduce.variable.dialog.title=\u64f7\u53d6\u8b8a\u6578
refactoring.introduce.variable.scope.error=\u540d\u7a31\u8207\u73fe\u6709\u8b8a\u6578\u6216\u53c3\u6578\u885d\u7a81

# introduce constant
refactoring.introduce.constant.dialog.title=\u64f7\u53d6\u5e38\u6578
refactoring.introduce.constant.scope.error=\u540d\u7a31\u5df2\u5728\u7bc4\u570d\u5167\u5ba3\u544a

# introduce parameter
refactoring.introduce.parameter.dialog.title=\u64f7\u53d6\u53c3\u6578

# pull up
refactoring.pull.up.dialog.title=\u628a\u6210\u54e1\u62c9\u5230
refactoring.pull.up.dialog.move.members.to.class=\u5c07\u6210\u54e1\u79fb\u5230\u8ab2\u5802\u4e0a
refactoring.pull.up.dialog.members.to.be.moved=\u4ee5\u4e0b\u6210\u54e1\u5c07\u88ab\u79fb\u52d5
refactoring.pull.up.error.cannot.perform.refactoring.using.selected.elements=\u4f7f\u7528\u9078\u64c7\u7684\u5143\u7d20\u7121\u6cd5\u57f7\u884c\u62c9\u52d5\u6210\u54e1
refactoring.pull.up.error.cannot.perform.refactoring.not.inside.class=\u4e0d\u80fd\u57f7\u884c\u62c9\u6210\u54e1\uff1a\u4e0d\u5728\u8ab2\u5802\u5167
refactoring.pull.up.error.cannot.perform.refactoring.no.base.classes=\u985e\u5225{0}\u6c92\u6709\u8d85\u985e\u5225\uff0c\u6216\u8005\u5b83\u5011\u90fd\u4e0d\u80fd\u7528\u65bc\u91cd\u69cb

# push down
refactoring.push.down.dialog.title=\u63a8\u5f9e\u4e0b\u9762\u7684\u6210\u54e1
refactoring.push.down.error.cannot.perform.refactoring.using.selected.elements=\u4f7f\u7528\u9078\u64c7\u5143\u7d20\u7121\u6cd5\u57f7\u884c\u63a8\u9001\u6210\u54e1
refactoring.push.down.error.cannot.perform.refactoring.not.inside.class=\u4e0d\u80fd\u57f7\u884cpull\u6210\u54e1\uff1a\u4e0d\u5728\u8ab2\u5802\u5167

# inline
refactoring.inline.local.multiassignment=\u5b9a\u7fa9\u5728\u591a\u91cd\u5206\u914d\u4e2d

# extract method
refactoring.extract.method=\u64f7\u53d6\u65b9\u6cd5
refactoring.extract.method.error.interrupted.execution.flow=\u57f7\u884c\u8cc7\u6599\u6d41\u7a0b\u4e2d\u65b7\u6642\u7121\u6cd5\u57f7\u884c\u91cd\u69cb
refactoring.extract.method.error.star.import=\u4ee3\u78bc\u5340\u584a\u5167\u7684\u661f\u5f62\u532f\u5165\u8a9e\u53e5\u4e0d\u80fd\u57f7\u884c\u91cd\u69cb
refactoring.extract.method.error.bad.selection=\u7121\u6cd5\u4f7f\u7528\u6240\u9078\u5143\u7d20\u57f7\u884c\u64f7\u53d6\u65b9\u6cd5
refactoring.extract.method.error.name.clash=\u65b9\u6cd5\u540d\u7a31\u8207\u73fe\u6709\u540d\u7a31\u885d\u7a81
refactoring.extract.method.error.returns=\u4ee3\u78bc\u7247\u6bb5\u4e2d\u4e0d\u80fd\u64f7\u53d6\u8fd4\u56de\u6307\u4ee4\u7684\u65b9\u6cd5
refactoring.extract.method.error.local.variable.modifications=\u4e0d\u80fd\u5f9e\u4ee3\u78bc\u7247\u6bb5\u4e2d\u7684\u5c40\u90e8\u8b8a\u6578\u4fee\u6539\u904b\u7b97\u5f0f\u9032\u884c\u91cd\u69cb
refactoring.extract.method.error.local.variable.modifications.and.returns=\u4e0d\u80fd\u4f7f\u7528\u5c40\u90e8\u8b8a\u6578\u4fee\u98fe\u5f9e\u904b\u7b97\u5f0f\u9032\u884c\u91cd\u69cb\uff0c\u4e26\u5728\u4ee3\u78bc\u7247\u6bb5\u5167\u8fd4\u56de\u6307\u4ee4
refactoring.extract.method.error.empty.fragment=\u4e0d\u80fd\u5f9e\u7a7a\u4ee3\u78bc\u7247\u6bb5\u57f7\u884c\u91cd\u69cb
refactoring.extract.method.error.yield=\u4ee3\u78bc\u5340\u584a\u4e2d\u7684'yield'\u8a9e\u53e5\u4e0d\u80fd\u57f7\u884c\u91cd\u69cb
refactoring.extract.method.error.class.level=\u4e0d\u80fd\u5728\u8ab2\u5802\u4e0a\u9032\u884c\u91cd\u69cb


# extract superclass
refactoring.extract.super.target.path.outside.roots=\u76ee\u6a19\u76ee\u9304\u5728\u9805\u76ee\u4e4b\u5916\u3002\u5fc5\u9808\u4f4d\u65bc\u5167\u5bb9\u6839\u76ee\u9304\u5167
refactoring.extract.super.target.class.already.exists=\u985e\u5225\u300c{0}\u300d\u5df2\u7d93\u5b58\u5728\u65bc\u9019\u500b\u6a21\u7d44\u4e2d
refactoring.extract.super.name.0.must.be.ident=\u540d\u7a31\u300c{0}\u300d\u7121\u6548\u3002\u5fc5\u9808\u662f\u6709\u6548\u7684Python\u8b58\u5225\u78bc
refactoring.extract.super.class.no.members.allowed=\u6c92\u6709\u4efb\u4f55\u6210\u54e1\u53ef\u4ee5\u88ab\u64f7\u53d6

# move
refactoring.move.choose.destination.file.title=\u9078\u53d6\u76ee\u6a19\u6a94\u6848
refactoring.move.error.destination.file.contains.class.$0=\u76ee\u6a19\u6a94\u6848\u5df2\u7d93\u5305\u542b\u540d\u70ba\u300c{0}\u300d\u7684\u985e\u5225
refactoring.move.error.destination.file.contains.function.$0=\u76ee\u6a19\u6a94\u6848\u5df2\u5305\u542b\u540d\u70ba\u300c{0}\u300d\u7684\u51fd\u6578
refactoring.move.error.destination.file.contains.global.variable.$0=\u76ee\u6a19\u6a94\u6848\u5df2\u5305\u542b\u540d\u70ba\u300c{0}\u300d\u7684\u5168\u5c40\u8b8a\u6578
refactoring.move.error.cannot.use.module.name.$0=\u5728\u532f\u5165\u4e2d\u4e0d\u80fd\u4f7f\u7528\u6a21\u7d44\u540d\u7a31\u300c{0}\u300d

# move module members (top-level)
refactoring.move.module.members=\u79fb\u52d5\u6a21\u7d44\u6210\u54e1
refactoring.move.module.members.dialog.title=\u79fb\u52d5\u6a21\u7d44\u6210\u54e1
refactoring.move.module.members.dialog.table.title=\u6279\u6b21\u79fb\u52d5(&M)
refactoring.move.module.members.dialog.description.class=\u79fb\u52d5\u985e\u5225{0}
refactoring.move.module.members.dialog.description.function=\u79fb\u52d5\u529f\u80fd{0}
refactoring.move.module.members.dialog.description.variable=\u79fb\u52d5\u5168\u5c40\u8b8a\u6578{0}
refactoring.move.module.members.dialog.description.selection=\u79fb\u52d5\u9078\u64c7\u7684\u5143\u7d20
refactoring.move.module.members.error.cannot.place.elements.into.nonpython.file=\u4e0d\u80fd\u5c07\u5143\u7d20\u653e\u7f6e\u5230\u975ePython\u6a94\u6848\u4e2d
refactoring.move.module.members.error.selection=\u7121\u6cd5\u4f7f\u7528\u6240\u9078\u5143\u7d20\u57f7\u884c\u91cd\u69cb

# Make function top-level
refactoring.make.method.top.level.dialog.title=\u4f7f\u65b9\u6cd5\u9802\u7d1a
refactoring.make.method.top.level.dialog.description=\u5c07\u65b9\u6cd5{0}\u79fb\u5230\u9802\u5c64

refactoring.make.local.function.top.level.dialog.title=\u4f7f\u672c\u6a5f\u529f\u80fd\u9054\u5230\u9802\u7d1a\u6c34\u5e73
refactoring.make.local.function.top.level.dialog.description=\u5c07\u672c\u6a5f\u51fd\u6578{0}\u79fb\u5230\u9802\u5c64

refactoring.make.function.top.level.error.nonlocal.writes=\u4e0d\u80fd\u79fb\u52d5\u975e\u5c40\u90e8\u5beb\u5165\u529f\u80fd
refactoring.make.function.top.level.error.self.reads=\u4e0d\u80fd\u5f9e\u5916\u90e8\u7bc4\u570d\u79fb\u52d5\u5305\u542b\u300c\u81ea\u6211\u300d\u53c3\u6578\u7528\u6cd5\u7684\u51fd\u6578
refactoring.make.function.top.level.error.outer.scope.reads=\u5927\u70ae\u79fb\u52d5\u5f9e\u5916\u90e8\u7bc4\u570d\u53c3\u7167\u540d\u7a31\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.private.attributes=\u4e0d\u80fd\u79fb\u52d5\u53c3\u7167\u79c1\u6709\u5be6\u4f8b\u5c6c\u6027\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.attribute.writes=\u7121\u6cd5\u79fb\u52d5\u5beb\u5165\u5be6\u4f8b\u5c6c\u6027\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.method.calls=\u7121\u6cd5\u79fb\u52d5\u8abf\u7528\u540c\u4e00\u985e\u5225\u7684\u5176\u4ed6\u65b9\u6cd5\u7684\u65b9\u6cd5
refactoring.make.function.top.level.error.special.usage.of.self=\u4e0d\u80fd\u79fb\u52d5\u5305\u542b\u300c\u81ea\u6211\u300d\u53c3\u6578\u7684\u7279\u6b8a\u7528\u6cd5\u7684\u65b9\u6cd5



#change signature
refactoring.change.signature.usage.view.declarations.header=\u51fd\u6578\u88ab\u91cd\u69cb
refactoring.change.signature.dialog.validation.name.defined=\u540d\u7a31\u5df2\u5728\u7bc4\u570d\u5167\u5b9a\u7fa9
refactoring.change.signature.dialog.validation.function.name=\u51fd\u6578\u540d\u7a31\u4e0d\u6b63\u78ba
refactoring.change.signature.dialog.validation.parameter.name=\u53c3\u6578\u540d\u7a31\u4e0d\u6b63\u78ba
refactoring.change.signature.dialog.validation.multiple.star=\u591a\u500b*\u53c3\u6578\u662f\u4e0d\u5141\u8a31\u7684
refactoring.change.signature.dialog.validation.multiple.double.star=\u591a\u500b**\u53c3\u6578\u662f\u4e0d\u5141\u8a31\u7684
refactoring.change.signature.dialog.validation.default.missing=\u9810\u8a2d\u503c\u7f3a\u5931
refactoring.change.signature.dialog.validation.parameter.missing=\u53c3\u6578\u540d\u7a31\u907a\u5931
refactoring.change.signature.dialog.default.value.checkbox=\u5728\u7c3d\u540d\u4e2d\u4f7f\u7528\u9810\u8a2d\u503c:
refactoring.change.signature.dialog.default.value.label=\u9810\u8a2d\u503c:
refactoring.change.signature.dialog.name.label=\u540d\u7a31:
refactoring.change.signature.find.usages.of.base.class={1}\u985e\u5225\u7684\u65b9\u6cd5{0}\n\u8986\u5beb\u985e\u5225{2}\u7684\u65b9\u6cd5\u3002\n\u4f60\u60f3\u91cd\u69cb\u7684\u57fa\u672c\u65b9\u6cd5\uff1f
refactoring.change.signature.error.wrong.caret.position.method.name=\u812b\u5b57\u5143\u61c9\u8a72\u88ab\u5b9a\u4f4d\u5728\u8981\u88ab\u91cd\u69cb\u7684\u65b9\u6cd5\u7684\u540d\u5b57\u4e0a
refactoring.change.signature.error.lambda.call=Caret\u5b9a\u4f4d\u5728lambda\u96fb\u8a71\u4e0a
refactoring.change.signature.error.tuple.parameters=\u51fd\u6578\u5305\u542b\u5143\u7d44\u53c3\u6578
refactoring.change.signature.error.not.under.source.root=\u51fd\u6578\u4e0d\u5728\u6e90\u4ee3\u78bc\u6839\u76ee\u9304\u4e0b

# convert module to package
refactoring.convert.module.to.package.title=\u5c07\u6a21\u7d44\u8f49\u63db\u70ba\u5305

# convert module
refactoring.convert.package.to.module.title=\u5c07\u6a21\u7d44\u8f49\u63db\u70ba\u5305
refactoring.convert.package.to.module.error.not.empty.package=\u5305\u300c{0}\u300d\u4e0d\u70ba\u7a7a


### Annotators ###
ANN.deleting.none=\u522a\u9664\u7121
ANN.assign.to.none=\u5206\u914d\u7d66\u7121
ANN.cant.assign.to.call=\u4e0d\u80fd\u5206\u914d\u7d66\u51fd\u6578\u8abf\u7528
ANN.cant.delete.call=\u7121\u6cd5\u522a\u9664\u51fd\u6578\u8abf\u7528
ANN.cant.aug.assign.to.generator=\u589e\u5f37\u5206\u914d\u7d66\u7522\u751f\u5668\u904b\u7b97\u5f0f\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.aug.assign.to.tuple.or.generator=\u589e\u5f37\u5206\u914d\u7d66\u5143\u7d44\u6587\u5b57\u6216\u7522\u751f\u5668\u904b\u7b97\u5f0f\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.assign.to.generator=\u5206\u914d\u7d66\u7522\u751f\u5668\u904b\u7b97\u5f0f\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.assign.to.operator=\u4e0d\u80fd\u5206\u914d\u7d66\u64cd\u4f5c\u54e1
ANN.cant.assign.to.parens=\u7121\u6cd5\u6307\u5b9a\u7d66()
ANN.cant.aug.assign.to.list.or.comprh=\u589e\u5f37\u5206\u914d\u5217\u51fa\u6587\u5b57\u6216\u7406\u89e3\u4e0d\u53ef\u80fd
ANN.cant.assign.to.comprh=\u7121\u6cd5\u5206\u914d\u7d66\u6e05\u55ae\u7406\u89e3
ANN.cant.assign.to.dict.comprh=\u4e0d\u80fd\u5206\u914d\u7d66\u5b57\u5178\u7684\u7406\u89e3
ANN.cant.assign.to.set.comprh=\u4e0d\u80fd\u5206\u914d\u7d66\u7406\u89e3
ANN.cant.aug.assign.to.comprh=\u589e\u5f37\u5206\u914d\u6e05\u55ae\u7406\u89e3\u4e0d\u53ef\u80fd
ANN.cant.aug.assign.to.dict.comprh=\u589e\u5f37\u5206\u914d\u5c0d\u5b57\u5178\u7684\u7406\u89e3\u662f\u4e0d\u53ef\u80fd\u7684
ANN.cant.aug.assign.to.set.comprh=\u589e\u5f37\u5206\u914d\u4e0d\u80fd\u8a2d\u5b9a\u7406\u89e3
ANN.cant.assign.to.literal=\u4e0d\u80fd\u5206\u914d\u7d66\u6587\u5b57
ANN.cant.delete.literal=\u7121\u6cd5\u522a\u9664\u6587\u5b57
ANN.cant.assign.to.lambda=\u4e0d\u80fd\u5206\u914d\u7d66lambda

ANN.break.outside.loop=\u300c\u5faa\u74b0\u300d\u5916
ANN.continue.outside.loop='\u7e7c\u7e8c'\u5916\u90e8\u5faa\u74b0
ANN.cant.continue.in.finally='finally'\u5b50\u53e5\u4e2d\u4e0d\u652f\u63f4'continue'
ANN.default.except.must.be.last=\u9810\u8a2d'\u9664\u4e86\uff1a'\u5fc5\u9808\u662f\u6700\u5f8c\u4e00\u500b

ANN.$0.both.global.and.param=\u540d\u7a31\u300c{0}\u300d\u7528\u4f5c\u53c3\u6578\u548c\u5168\u5c40
ANN.$0.assigned.before.global.decl=\u5728\u5168\u5c40\u5ba3\u544a\u4e4b\u524d\u5206\u914d\u540d\u7a31\u300c{0}\u300d

ANN.duplicate.param.name=\u91cd\u8907\u7684\u53c3\u6578\u540d\u7a31
ANN.starred.param.after.kwparam=**\u53c3\u6578\u5f8c\u9762\u7684\u53c3\u6578
ANN.regular.param.after.vararg=*\u53c3\u6578\u5f8c\u7684\u5e38\u898f\u53c3\u6578
ANN.regular.param.after.keyword=**\u53c3\u6578\u5f8c\u7684\u5e38\u898f\u53c3\u6578
ANN.non.default.param.after.default=\u975e\u9810\u8a2d\u53c3\u6578\u9075\u5faa\u9810\u8a2d\u53c3\u6578
ANN.named.parameters.after.star=named parameters must follow bare *
ANN.tuple.py3=Python 3\u4e0d\u652f\u63f4\u5143\u7d44\u53c3\u6578\u89e3\u5305
ANN.multiple.args=multiple * parameters are not allowed
ANN.multiple.kwargs=multiple ** parameters are not allowed

ANN.star.import.at.top.only='import *'\u53ea\u5141\u8a31\u5728\u6a21\u7d44\u7d1a\u5225

ANN.missing.closing.quote=\u7f3a\u5c11\u7d50\u675f\u8a9e[{0}]
ANN.missing.closing.triple.quotes=\u7f3a\u5c11\u95dc\u9589\u4e09\u91cd\u5f15\u865f

ANN.method.$0.removed.use.$1=\u65b9\u6cd5\u300c{0}\u300d\u5df2\u88ab\u79fb\u9664\uff0c\u8acb\u6539\u70ba\u4f7f\u7528\u300c{1}\u300d
ANN.method.$0.removed=\u65b9\u6cd5\u300c{0}\u300d\u5df2\u522a\u9664

### parsing
PARSE.expected.expression=\u8868\u9054\u9810\u671f
PARSE.expected.rbracket=']'\u9810\u8a08
PARSE.expected.expr.or.comma.or.bracket=\u9810\u671f\u7684\u8868\u9054\uff0c'\uff0c'\u6216']'
PARSE.expected.in=\u9810\u671f\u4e2d
PARSE.expected.for.or.bracket=']'\u6216'for'\u9810\u671f
PARSE.expected.comma=\u9810\u671f\u70ba ','
PARSE.expected.colon=':' \u9810\u8a08
PARSE.expected.rpar=\u9810\u671f\u70ba ')'
PARSE.expected.lpar=\u9810\u671f\u70ba '('
PARSE.expected.rbrace='}'\u9810\u8a08
PARSE.expected.tick=\u300c(\u53cd\u5411\uff09\u9810\u8a08
PARSE.expected.name=\u9810\u671f\u7684\u540d\u5b57
PARSE.expected.colon.or.rbracket=\u9810\u671f\u70ba ':' \u6216 ']'
PARSE.expected.comma.or.rpar=',' \u6216 ')'
PARSE.expected.else=\u300c\u5176\u4ed6\u300d\u9810\u8a08

PARSE.expected.identifier=\u8b58\u5225\u78bc\u9810\u671f
PARSE.expected.comma.lpar.rpar=',' \u6216 '(' \u6216 ')'
PARSE.expected.statement.break=\u5ba3\u544a\u4e2d\u65b7\u9810\u8a08
PARSE.expected.@.or.def=\u671f\u671b '@' \u6216 'def'
PARSE.expected.formal.param.name=\u9810\u671f\u7684\u5f62\u5f0f\u53c3\u6578\u540d\u7a31

### qiuck doc generator
QDOC.module.path.unknown=(\u6a21\u7d44\u8def\u5f91\u672a\u77e5\uff09
QDOC.epydoc.python2.sdk.not.found=\u60a8\u9700\u8981\u8a2d\u5b9aPython 2 SDK\u624d\u80fd\u5448\u73fe<a href='http://epydoc.sourceforge.net/'> Epydoc </a>\u6587\u4ef6
QDOC.local.sdk.not.found=You need a configured local Python SDK to render docstrings.
QDOC.assigned.to=Assigned to:
QDOC.documentation.is.copied.from=Documentation is copied from:
QDOC.accessor.kind=Accessor kind:
QDOC.raises=Raises:
QDOC.keyword.args=Keyword args:


runcfg.tests.cant_rerun=\u7531\u65bc\u6e2c\u8a66ID\u7121\u6cd5\u5256\u6790\uff0c\u56e0\u6b64\u7121\u6cd5\u91cd\u65b0\u57f7\u884c\u6e2c\u8a66\u3002\u5617\u8a66\u522a\u9664\u57f7\u884c\u8a2d\u5b9a\uff0c\u4e26\u4f7f\u7528\u53f3\u9375\u9ede\u64ca\u65b0\u589e\u4e00\u500b\u3002

### doctest run conf
runcfg.doctest.display_name=\u6587\u4ef6\u6e2c\u8a66
runcfg.doctest.description=Python\u7684doctests\u57f7\u884c\u8a2d\u5b9a

### nosetests run conf
runcfg.nosetests.display_name=Nosetests
runcfg.nosetests.description=Python\u7684nosetests\u57f7\u884c\u8a2d\u5b9a

### pytest run conf
runcfg.pytest.display_name=pytest
runcfg.pytest.description=py.test\u57f7\u884c\u8a2d\u5b9a
runcfg.pytest.target=\u76ee\u6a19(&T):
runcfg.pytest.parameters=\u9078\u9805(&O):
runcfg.pytest.keywords=\u95dc\u9375\u8a5e(&K):

### trial run conf
runcfg.trial.display_name=Twisted Trial

### test run configuration
runcfg.test.display_name=Python\u6e2c\u8a66
runcfg.test.description=\u7531PyCharm\u652f\u63f4\u7684Python\u65b9\u584a\u67b6

### unittest run configuration
runcfg.unittest.display_name=\u55ae\u5143\u6e2c\u8a66
runcfg.unittest.description=Python\u7684unittest\u57f7\u884c\u8a2d\u5b9a
runcfg.unittest.no_script_name=\u8acb\u6307\u5b9a\u6307\u4ee4\u78bc\u540d\u7a31
runcfg.unittest.no_module_name=Please specify module qualified name
runcfg.unittest.no_class_name=\u8acb\u6307\u5b9a\u73ed\u7d1a\u540d\u7a31
runcfg.unittest.no_method_name=\u8acb\u6307\u5b9a\u65b9\u6cd5\u540d\u7a31
runcfg.unittest.no_folder_name=\u8acb\u6307\u5b9a\u5177\u6709\u6e2c\u8a66\u7684\u8cc7\u6599\u593e
runcfg.unittest.incorrect.script=\u6e2c\u8a66\u6307\u4ee4\u78bc\u540d\u7a31\u61c9\u4ee5\u300c\u6e2c\u8a66\u300d\u524d\u7f6e\u5b57\u5143\u958b\u982d
runcfg.unittest.dlg.tests_group_title=\u6e2c\u8a66:
runcfg.unittest.dlg.test_script_label=\u6307\u4ee4\u78bc:
runcfg.unittest.dlg.class_label=\u985e\u5225:
runcfg.unittest.dlg.method_label=\u65b9\u6cd5:
runcfg.unittest.dlg.function_label=\u529f\u80fd:
runcfg.unittest.dlg.folder_path=\u593e:
runcfg.unittest.dlg.test_type_title=\u6e2c\u8a66:
runcfg.unittest.dlg.all_in_folder_title=\u5168\u90e8\u5728\u8cc7\u6599\u593e\u4e2d
runcfg.unittest.dlg.all_in_script_title=\u6307\u4ee4\u78bc
runcfg.unittest.dlg.test_class_title=\u985e\u5225
runcfg.unittest.dlg.test_method_title=\u65b9\u6cd5
runcfg.unittest.dlg.folder_title=\u6e2c\u8a66\u8cc7\u6599\u593e:
runcfg.unittest.no_valid_sdk=\u8acb\u9078\u53d6\u4e00\u500b\u6709\u6548\u7684Python\u4e2d\u9593\u4eba
runcfg.unittest.no_module_sdk=\u8acb\u9078\u53d6\u4e00\u500b\u6709\u6548\u7684Python SDK\u6a21\u7d44
runcfg.unittest.no_sdk=\u8acb\u6307\u5b9a\u4e00\u500bPython SDK
runcfg.unittest.dlg.select.folder.path=\u9078\u53d6\u8cc7\u6599\u593e\u8def\u5f91:
runcfg.unittest.dlg.select.script.path=\u9078\u53d6\u6307\u4ee4\u78bc\u8def\u5f91:
runcfg.unittest.dlg.interpreter_options_title=\u53e3\u8b6f\u54e1\u9078\u9805:
runcfg.unittest.dlg.messages.working.dir=\u5de5\u4f5c\u76ee\u9304:
runcfg.labels.script_parameters=\u53c3\u6578(&P):
runcfg.labels.script=\u6307\u4ee4\u78bc(&S):
runcfg.labels.environment_variables=\u74b0\u5883\u8b8a\u6578(&E):
runcfg.labels.interpreter=\u4f7f\u7528\u6307\u5b9a\u7684\u89e3\u91cb\u5668(&U):
runcfg.labels.interpreter_options=\u53e3\u8b6f\u54e1\u9078\u9805(&O):
runcfg.labels.working_directory=\u5de5\u4f5c\u76ee\u9304(&W):
runcfg.captions.script_parameters_dialog=\u8f38\u5165\u6307\u4ee4\u78bc\u53c3\u6578
runcfg.captions.interpreter_options_dialog=\u8f38\u5165\u89e3\u91cb\u5668\u9078\u9805
sdk.error.invalid.interpreter.name.$0=\u7121\u6548\u7684Python\u4e2d\u6587\u540d\u7a31\u300c{0}\u300d\uff01
sdk.select.path=\u9078\u53d6Python\u89e3\u91cb\u5668
runcfg.unittest.dlg.pattern=\u6a21\u5f0f:

runcfg.testing.no.test.framework=\u5728\u9078\u64c7\u7684\u89e3\u91cb\u5668\u4e2d\u627e\u4e0d\u5230{0}\u4e9e\u8ecd

# Consoles messages
python.console=Python\u4e3b\u63a7\u53f0


# UI messages
MSG.title.bad.sdk=\u7121\u6548\u7684Python SDK
MSG.cant.setup.sdk.$0=\u7121\u6cd5\u8a2d\u5b9apython SDK \n\u5728{0}\u3002\nSDK\u4f3c\u4e4e\u7121\u6548\u3002


#Buildout
buildout=\u64f4\u5efa
buildout.unresolved.part.inspection=\u5efa\u7acb\u8a2d\u5b9a\u672a\u89e3\u6c7a\u7684\u90e8\u4efd\u6aa2\u67e5
buildout.unresolved.part.inspection.msg=\u672a\u89e3\u6c7a\u7684\u90e8\u4efd\u53c3\u8003
runcfg.unittest.dlg.test_function_title=\u529f\u80fd
runcfg.unittest.dlg.keywords=\u95dc\u9375\u8a5e:
run.configuration.remote.debug.name=Python\u9060\u7aef\u8a3a\u65b7
run.configuration.type.description=\u555f\u52d5\u9060\u7aef\u8a3a\u65b7\u4f3a\u670d\u5668
run.configuration.show.command.line.action.name=\u986f\u793aPython\u63d0\u793a

unable.to.stop=\u76ee\u524d\u6b63\u5728\u57f7\u884c\u7684\u9032\u7a0b\u4e0d\u80fd\u505c\u6b62\u3002\u9996\u5148\u624b\u52d5\u6bba\u6b7b\u5b83\u3002

#Debug

debug.popup.title.step.into.function=\u6b65\u5165\u529f\u80fd

remote.debug.info=\u8a0a\u606f
remote.debug.server.hint=\u555f\u52d5\u6b64\u8a3a\u65b7\u8a2d\u5b9a\u4ee5\u555f\u52d5\u8a3a\u65b7\u4f3a\u670d\u5668\u3002
remote.debug.server.hint1.5=\u66f4\u65b0\u60a8\u7684\u6307\u4ee4\u78bc:
remote.debug.server.hint2=1.\u5c07Pycharm-debug.egg\u5f9ePyCharm\u5b89\u88dd\u65b0\u589e\u5230Python\u8def\u5f91\u3002
remote.debug.server.hint3=3.\u65b0\u589e\u4ee5\u4e0b\u547d\u4ee4\u4ee5\u9023\u63a5\u5230\u8a3a\u65b7\u4f3a\u670d\u5668:
remote.debug.settings=\u8a2d\u5b9a
remote.debug.remote.host=\u9060\u7aef\u4e3b\u6a5f
remote.debug.port=\u6e2f\u53e3:
remote.debug.use.path.mapping=\u4f7f\u7528\u8def\u5f91\u6620\u5c04
remote.debug.remote.root.folder=\u9060\u7aef\u8def\u5f91\u524d\u7f6e\u5b57\u5143:
remote.debug.local.root.folder=\u672c\u6a5f\u8def\u5f91\u524d\u7f6e\u5b57\u5143:
remote.debug.local.host=\u672c\u6a5f\u4e3b\u6a5f\u540d\u7a31:
remote.debug.redirect.output=\u5c07\u8f38\u51fa\u91cd\u5b9a\u5411\u5230\u4e3b\u63a7\u53f0
remote.debug.suspend.on.connect=\u9023\u63a5\u5f8c\u66ab\u505c

# SDK / skeletons
sdk.errorlog.$0.mods.fail.in.$1.sdks={0,choice,|1#1 module|2#{0,number} modules} \u5728 {1,choice, |1#1 interpreter|2#{1,number} interpreters} \u4e2d\u5931\u6557<a href=\"#\">\u8a73\u60c5...</a>
sdk.errorlog.$0.mods.fail.in.$1.sdks.$2.completely={0,choice,|1#1 module|2#{0,number} modules}\u5728{1,choice, |1#1 interpreter|2#{1,number} interpreters}, {2,choice, |1#1 interpreter|2#{2,number} interpreters}\u5931\u6557</i>\u5b8c\u6210<a href=\"#\">\u8a73\u60c5...</a>
sdk.some.skeletons.failed=\u4e00\u4e9b\u9ab7\u9acf\u672a\u80fd\u7522\u751f
sdk.error.dialog.problems=\u65b9\u584a\u67b6\u7522\u751f\u554f\u984c
sdk.error.dialog.failed.sdks=\u5931\u6557\u7684\u89e3\u91cb\u5668
sdk.error.dialog.failed.modules=\u5931\u6557\u7684\u6a21\u7d44
sdk.error.dialog.were.blacklisted=\u7576\u6a21\u7d44\u66f4\u65b0\u6216\u65b0\u7248\u672c\u7684\u767c\u751f\u5668\u53ef\u7528\u6642\uff0c\u5c07\u518d\u6b21\u5617\u8a66\u70ba\u4e0a\u8ff0\u6a21\u7d44\u7522\u751f\u65b9\u584a\u67b6\u3002
sdk.gen.querying.$0=\u67e5\u8a62{0}\u7684\u65b9\u584a\u67b6\u7522\u751f\u5668...
sdk.gen.updating.builtins.$0=\u66f4\u65b0{0}\u7684\u5167\u7f6e\u7d50\u69cb\u7684\u65b9\u584a\u67b6...
sdk.gen.updating.$0=\u66f4\u65b0{0}\u7684\u65b9\u584a\u67b6...
sdk.gen.cleaning.$0=\u6e05\u7406{0}\u7684\u65b9\u584a\u67b6...
sdk.gen.reloading=\u91cd\u65b0\u8f09\u5165\u7522\u751f\u7684\u65b9\u584a\u67b6...
sdk.gen.reading.versions.file=\u95b1\u8b80\u7248\u672c\u6a94\u6848...
sdk.gen.notify.converting.old.skels=\u8f49\u63db\u820a\u7684\u65b9\u584a\u67b6
sdk.gen.notify.converting.text=\u4e8c\u9032\u4f4d\u6a21\u7d44\u7684\u65b9\u584a\u67b6\u4f3c\u4e4e\u4f86\u81ea\u820a\u7248\u672c\u3002<br/>\u9019\u4e9b\u5c07\u88ab\u5b8c\u5168\u91cd\u65b0\u7522\u751f\uff0c\u9019\u5c07\u9700\u8981\u4e00\u4e9b\u6642\u9593\uff0c\u4f46\u53ea\u6703\u767c\u751f\u4e00\u6b21</i>\u3002<br/>\u4e0b\u4e00\u6b21\u958b\u555f\u9805\u76ee\uff0c\u53ea\u6709\u65b0\u7684\u6216\u66f4\u65b0\u7684\u4e8c\u9032\u4f4d\u6a21\u7d44\u7684\u65b9\u584a\u67b6\u5c07\u88ab\u91cd\u65b0\u7522\u751f\u3002
sdk.gen.updating.interpreter=\u66f4\u65b0Python\u89e3\u91cb\u5668
sdk.scanning.installed.packages=\u6383\u7784\u5df2\u5b89\u88dd\u7684\u8edf\u9ad4\u5305
sdk.gen.stubs.for.binary.modules=\u7522\u751f\u4e8c\u9032\u4f4d\u6a21\u7d44{0}\u7684\u5b58\u6839

# Active SDK configurable and related dialogs
active.sdk.dialog.show.all.item=\u986f\u793a\u6240\u6709...
active.sdk.dialog.project.interpreter=\u9805\u76ee\u7ffb\u8b6f:
active.sdk.dialog.project.interpreter.path.mappings=\u8def\u5f91\u6620\u5c04:
active.sdk.dialog.project.interpreter.path.mappings.default.project.error=\u958b\u555f\u6216\u5efa\u7acb\u9805\u76ee\u4f86\u8a2d\u5b9a\u6620\u5c04

sdk.details.step.add=Add...
sdk.details.step.create.virtual.env=\u5efa\u7acbVirtualEnv
sdk.details.step.create.conda.env=\u5efa\u7acbConda Env
sdk.details.step.show.all=Show All...

sdk.details.dialog.title=\u9805\u76ee\u53e3\u8b6f\u54e1
sdk.details.dialog.hide.all.virtual.envs=Hide virtual environments associated with other projects
sdk.details.dialog.show.interpreter.paths=\u986f\u793a\u6240\u9078\u89e3\u91cb\u5668\u7684\u8def\u5f91
sdk.details.dialog.error.duplicate.name=\u8acb\u70ba\u89e3\u91cb\u8005\u6307\u5b9a\u4e00\u500b\u552f\u4e00\u7684\u540d\u5b57

sdk.edit.dialog.title=\u7de8\u8f2fPython\u89e3\u91cb\u5668
sdk.edit.dialog.associate.virtual.env.with.path=\u5c07\u6b64\u865b\u64ec\u74b0\u5883\u8207{0}\u95dc\u806f
sdk.edit.dialog.associate.virtual.env.current.project=\u5c07\u6b64\u74b0\u5883\u8207\u76ee\u524d\u9805\u76ee\u76f8\u95dc\u806f
sdk.edit.dialog.specify.interpreter.path=\u6307\u5b9a\u89e3\u91cb\u5668\u8def\u5f91

sdk.paths.dialog.title=\u53e3\u8b6f\u54e1\u8def\u5f91
sdk.paths.dialog.reload.paths=\u91cd\u65b0\u8f09\u5165\u8def\u5f91\u6e05\u55ae
sdk.paths.dialog.added.by.user.suffix=(\u7531\u4f7f\u7528\u8005\u65b0\u589e\uff09
sdk.paths.dialog.removed.by.user.suffix=(\u7531\u4f7f\u7528\u8005\u522a\u9664\uff09

sdk.create.venv.dialog.creating.venv=\u5efa\u7acb\u865b\u64ec\u74b0\u5883
sdk.create.venv.dialog.make.available.to.all.projects=\u63d0\u4f9b\u7d66\u6240\u6709\u9805\u76ee
sdk.create.venv.dialog.select.venv.location=\u9078\u53d6\u865b\u64ec\u74b0\u5883\u7684\u4f4d\u7f6e
sdk.create.venv.dialog.error.not.empty.directory=\u76ee\u9304\u4e0d\u662f\u7a7a\u7684
sdk.create.venv.dialog.error.empty.venv.name=VirtualEnv\u540d\u7a31\u5fc5\u9808\u8f38\u5165
sdk.create.venv.dialog.error.empty.venv.location=\u76ee\u7684\u5730\u76ee\u9304\u8def\u5f91\u5fc5\u9808\u8f38\u5165
sdk.create.venv.dialog.error.invalid.directory.name=\u7121\u6548\u7684\u76ee\u9304\u540d\u7a31
sdk.create.venv.dialog.error.failed.to.create.venv=\u7121\u6cd5\u5efa\u7acb\u865b\u64ec\u74b0\u5883

sdk.create.venv.dialog.title=\u5efa\u7acb\u865b\u64ec\u74b0\u5883
sdk.create.venv.dialog.label.name=\u540d\u7a31:
sdk.create.venv.dialog.label.location=\u4f4d\u7f6e:
sdk.create.venv.dialog.label.base.interpreter=\u57fa\u790e\u7ffb\u8b6f:
sdk.create.venv.dialog.label.inherit.global.site.packages=\u7e7c\u627f\u5168\u5c40\u7ad9\u53f0\u5305
sdk.create.venv.dialog.error.no.base.interpreter=\u9078\u53d6\u57fa\u790e\u89e3\u91cb\u5668

sdk.create.venv.conda.dialog.title=\u5efa\u7acbConda\u74b0\u5883
sdk.create.venv.conda.dialog.error.no.python.version=\u9078\u53d6python\u7248\u672c
sdk.create.venv.conda.dialog.label.python.version=Python\u7248\u672c:

# remote interpreters
remote.interpreter.add.title=\u65b0\u589e\u9060\u7aef\u89e3\u91cb\u5668
remote.interpreter.configure.title=\u8a2d\u5b9a\u9060\u7aefPython\u89e3\u91cb\u5668
remote.interpreter.configure.path.title=\u9078\u53d6Python\u89e3\u91cb\u5668
remote.interpreter.configure.temp.files.path.title=\u70baPyCharm\u52a9\u7406\u9078\u53d6\u8cc7\u6599\u593e
remote.interpreter.default.interpreter.path=\u5728/ usr / bin\u4e2d/\u87d2\u86c7
remote.interpreter.docker.default.interpreter.path=\u87d2\u86c7
remote.interpreter.unspecified.interpreter.path=\u6307\u5b9aPython\u89e3\u91cb\u5668\u8def\u5f91
remote.interpreter.unspecified.temp.files.path=\u6307\u5b9aPyCharm\u52a9\u7406\u7684\u8def\u5f91
remote.interpreter.configure.path.label=Python\u89e3\u91cb\u5668\u8def\u5f91:
remote.interpreter.configure.temp.files.path.label=PyCharm\u52a9\u7406\u8def\u5f91:
remote.interpreter.error.plugin.missing=\u9060\u7aef\u4e3b\u6a5f\u5b58\u53d6\u589e\u76ca\u96c6\u907a\u5931\u3002\u8acb\u555f\u7528{0}\u4e2d\u7684\u589e\u76ca\u96c6\u3002

# Message we display for inspection if user uses custom class type members that do not exist
custom.type.mimic.name=\u57fa\u65bc{0}\u7684\u52d5\u614b\u985e\u5225


# CommandLine
commandLine.inspection.name=\u547d\u4ee4\u5217\u6aa2\u67e5
commandLine.inspection.badCommand=\u932f\u8aa4\u6216\u672a\u77e5\u7684\u547d\u4ee4\u3002\u78ba\u4fdd\u9019\u500b\u547d\u4ee4\u771f\u7684\u5b58\u5728\u3002
commandLine.inspection.badOption=\u4e0d\u597d\u7684\u6216\u672a\u77e5\u7684\u9078\u9805\u3002\u78ba\u4fdd\u9019\u500b\u9078\u9805\u771f\u7684\u5b58\u5728\u3002
commandLine.inspection.badArgument=\u53c3\u6578\u4e0d\u80fd\u6709\u9019\u500b\u503c\u3002\u4f7f\u7528\u81ea\u52d5\u5b8c\u6210\u4f86\u6aa2\u67e5\u53ef\u80fd\u7684\u503c\u6e05\u55ae\u3002
commandLine.inspection.excessArgument=\u9019\u88e1\u4e0d\u53ef\u80fd\u6709\u904e\u591a\u7684\u8ad6\u64da\u6216\u8ad6\u9ede
# What to display if argument is available here, but no name provided
commandLine.argumentHint.defaultName=\u53c3\u6578
# What to display of user entered junk
commandLine.commandNotFound=\u627e\u4e0d\u5230{0}\uff1a\u547d\u4ee4

# Window with actions
# "X" button title
windowWithActions.closeWindow=\u95dc\u9589\u8996\u7a97
# "Stop" button title
windowWithActions.stopProcess=\u505c\u6b62\u6b63\u5728\u57f7\u884c\u7684\u9032\u7a0b

formatter.imports.panel.title=\u9032\u53e3
formatter.imports.panel.optimize.imports=\u6700\u4f73\u5316\u9032\u53e3
formatter.imports.panel.sort.imports=\u6392\u5e8f\u532f\u5165\u8a9e\u53e5
formatter.imports.panel.sort.names.in.from.imports=\u5728\u300cfrom\u300d\u532f\u5165\u4e2d\u6392\u5e8f\u532f\u5165\u7684\u540d\u7a31
formatter.imports.panel.join.from.imports.with.same.source=\u52a0\u5165\u300c\u4f86\u81ea\u300d\u540c\u4e00\u4f86\u6e90\u7684\u9032\u53e3
formatter.imports.panel.sort.by.type=\u5728\u4e00\u500b\u7d44\u4e2d\u55ae\u7368\u6392\u5e8fplain\u548c\u300cfrom\u300d\u532f\u5165

formatter.panel.dict.alignment.do.not.align=\u4e0d\u8981\u5c0d\u9f4a
formatter.panel.dict.alignment.align.on.colon=\u5c0d\u9f4a\u5192\u865f
formatter.panel.dict.alignment.align.on.value=\u5c0d\u6e96\u50f9\u503c
formatter.panel.dict.alignment.label=\u5b57\u5178\u5c0d\u9f4a:
formatter.panel.add.trailing.line.feed=\u5728\u6a94\u6848\u7d50\u5c3e\u65b0\u589e\u63db\u884c\u7b26
formatter.panel.use.continuation.indent.for.arguments=\u4f7f\u7528\u9023\u7e8c\u7e2e\u9032\u53c3\u6578

formatter.left.bracket = \u5de6\u62ec\u865f
formatter.around.eq.in.named.parameter = around =\u5728\u547d\u540d\u53c3\u6578\u4e2d
formatter.around.eq.in.keyword.argument = around =\u5728\u95dc\u9375\u5b57\u53c3\u6578\u4e2d
formatter.braces = \u80cc\u5e36
formatter.before.backslash = \u4e4b\u524d\u300c
formatter.before.hash = \u5728'#'\u4e4b\u524d
formatter.after.hash = \u5728'#'\u4e4b\u5f8c
formatter.around.top.level.imports = \u9802\u7d1a\u9032\u53e3\u5f8c:
formatter.after.local.imports=\u7576\u5730\u9032\u53e3\u5f8c:
formatter.before.first.method=Before the first method:
formatter.around.top.level.classes.and.function=\u570d\u7e5e\u9802\u7d1a\u8ab2\u7a0b\u548c\u529f\u80fd:
formatter.around.multiplicative.operators=\u4e58\u6cd5\u904b\u7b97\u5b50(*\uff0c@\uff0c/\uff0c\uff05\uff09
formatter.around.power.operator=\u96fb\u529b\u904b\u71df\u5546(**\uff09
formatter.single.clause.statements=\u55ae\u689d\u8a9e\u53e5
formatter.multi.clause.statements=\u591a\u8a9e\u53e5\u8a9e\u53e5
formatter.force.new.line.after.colon=\u5192\u865f\u5f8c\u5f37\u5236\u63db\u884c
formatter.align.when.multiline=\u591a\u884c\u5c0d\u9f4a
formatter.collections.and.comprehensions=\u6536\u85cf\u548c\u7406\u89e3
formatter.from.import.statements=\u300c\u4f86\u81ea\u300d\u9032\u53e3\u8a9e\u53e5
formatter.from.import.statements.force.parentheses.if.multiline=\u5982\u679c\u591a\u884c\u5f37\u5236\u62ec\u865f
formatter.from.import.statements.force.comma.if.multline=\u5982\u679c\u591a\u884c\uff0c\u5f37\u5236\u5c3e\u96a8\u9017\u865f
formatter.dictionary.literals=\u5b57\u5178\u6587\u5b57
formatter.hang.closing.brackets=\u639b\u8457\u62ec\u865f

smartKeys.insert.backslash.in.statement.on.enter=\u5728\u8a9e\u53e5\u4e2d\u6309Enter\u6642\u63d2\u5165\u53cd\u659c\u69d3
smartKeys.insert.self.in.method=\u5b9a\u7fa9\u65b9\u6cd5\u6642\u63d2\u5165\u300c\u81ea\u6211\u300d
smartKeys.insert.type.placeholder.in.docstring.stub=\u5728\u6587\u4ef6\u8a3b\u89e3\u5b58\u6839\u4e2d\u63d2\u5165\u985e\u578b\u4f54\u4f4d\u7b26

show.expression.type.no.expression.found=No expression found
runcfg.labels.module=Module: